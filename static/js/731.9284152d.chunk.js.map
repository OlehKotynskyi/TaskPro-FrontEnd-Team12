{"version":3,"file":"static/js/731.9284152d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Header/Header.module.css?4e72","webpack://react-homework-template/./src/components/ModalWindow/UserEditModal/UserEditModal.module.css?326b","components/ModalWindow/UserEditModal/UserEditModal.jsx","components/Header/Header.jsx","hooks/useOutsideClick.js","webpack://react-homework-template/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://react-homework-template/./src/components/BoardCard/BoardCard.module.css?ed49","webpack://react-homework-template/./src/components/ModalWindow/BoardModal/BoardModal.module.css?af20","components/ModalWindow/BoardModal/BoardModal.jsx","components/BoardCard/BoardCard.jsx","webpack://react-homework-template/./src/components/ModalWindow/HelpModal/HelpModal.module.css?32ef","components/ModalWindow/HelpModal/HelpModal.jsx","components/Sidebar/Sidebar.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/Info/Info.module.css?d253","components/Info/Info.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"headerBox\":\"Header_headerBox__RPcIW\",\"imgBtn\":\"Header_imgBtn__FQJWu\",\"avatarWrap\":\"Header_avatarWrap__W3T7-\",\"avatar\":\"Header_avatar__fR3aq\",\"arrowIcon\":\"Header_arrowIcon__iUFq8\",\"arrow\":\"Header_arrow__UOjtE\",\"open\":\"Header_open__coLd6\",\"text\":\"Header_text__4jGdp\",\"dropdown\":\"Header_dropdown__ZNsCx\",\"dropbtn\":\"Header_dropbtn__iVUxw\",\"dropdownContent\":\"Header_dropdownContent__Rx4Dt\",\"show\":\"Header_show__mvTx2\",\"rightBlock\":\"Header_rightBlock__UU+Ag\",\"themeBtn\":\"Header_themeBtn__BpnEE\",\"burgerMenu\":\"Header_burgerMenu__NNFS9\",\"menu\":\"Header_menu__bKlxq\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserEditModal_container__fmnEZ\",\"backdrop\":\"UserEditModal_backdrop__VFVNS\",\"cont\":\"UserEditModal_cont__61oRW\",\"wrap\":\"UserEditModal_wrap__YQOVi\",\"closeBtn\":\"UserEditModal_closeBtn__FwgRu\",\"txt\":\"UserEditModal_txt__5B5ud\",\"avatarContainer\":\"UserEditModal_avatarContainer__XQO3d\",\"plusBtn\":\"UserEditModal_plusBtn__Ggtv0\",\"formInput\":\"UserEditModal_formInput__u5gWz\",\"formGroup\":\"UserEditModal_formGroup__BZND2\",\"error\":\"UserEditModal_error__uWT19\",\"forma\":\"UserEditModal_forma__DbTXq\",\"btn\":\"UserEditModal_btn__B3qmh\",\"eye\":\"UserEditModal_eye__vSeKA\",\"avatar\":\"UserEditModal_avatar__4GdiQ\"};","import { useRef, useEffect, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './UserEditModal.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n  selectAccessToken,\n} from '../../../redux/auth/authSelectors';\nimport { userCurrent, updateUser } from '../../../redux/auth/authOperations';\nimport { Toaster, toast } from 'react-hot-toast';\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Must be a valid email!').required('Required'),\n  password: Yup.string().min(7, 'Too short').max(256, 'Too long'),\n});\n\nexport default function UserEditModal({ onClose }) {\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const token = useSelector(selectAccessToken);\n\n  const methods = useForm({\n    resolver: yupResolver(ValidationSchema),\n    defaultValues: {\n      name: user?.name || '',\n      email: user?.email || '',\n    },\n  });\n  const { handleSubmit, reset, setValue } = methods;\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    if (isLoggedIn && !isRefreshing) {\n      dispatch(userCurrent());\n    }\n  }, [dispatch, isLoggedIn, isRefreshing]);\n\n  useEffect(() => {\n    if (user) {\n      setValue('name', user.name);\n      setValue('email', user.email);\n    }\n  }, [user, setValue]);\n\n  const onSubmit = async userData => {\n    const formData = new FormData();\n\n    for (const key in userData) {\n      if (userData.hasOwnProperty(key)) {\n        formData.append(key, userData[key]);\n      }\n    }\n\n    formData.append('theme', user.theme);\n\n    if (file) {\n      formData.append('avatar', file);\n    }\n    try {\n      await dispatch(updateUser({ formData, token })).unwrap();\n      toast.success('Updated successfully', {\n        position: 'top-center',\n        style: { background: 'green', color: 'white' },\n      });\n      reset();\n      onClose();\n    } catch (error) {\n      toast.error(`Error: ${error.message}`, {\n        position: 'top-center',\n        style: { background: 'red', color: 'white' },\n      });\n    }\n  };\n\n  const handleMenuClick = ev => {\n    ev.stopPropagation();\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n\n  return (\n    <>\n      <div className={css.backdrop} onClick={() => onClose()}>\n        <div\n          className={`${css.container} ${css.cont}`}\n          onClick={handleMenuClick}\n        >\n          <div className={css.wrap}>\n            <button className={css.closeBtn} onClick={() => onClose()}>\n              <svg width=\"18\" height=\"18\" stroke=\"currentColor\">\n                <use href={`${sprite}#icon-x-close`} />\n              </svg>\n            </button>\n          </div>\n          <p className={css.txt}>Edit Profile</p>\n          <div className={css.avatarContainer}>\n            {file ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"avatar\"\n                className={css.avatar}\n              />\n            ) : user?.avatarURL ? (\n              <img src={user.avatarURL} alt=\"avatar\" className={css.avatar} />\n            ) : (\n              <svg className={css.avatar}>\n                <use href={`${sprite}#icon-user`} />\n              </svg>\n            )}\n            <button\n              type=\"button\"\n              className={css.plusBtn}\n              onClick={handleButtonClick}\n            >\n              <svg width=\"10\" height=\"10\" stroke=\"currentColor\">\n                <use href={`${sprite}#icon-plus`}></use>\n              </svg>\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n              />\n            </button>\n          </div>\n          <FormProvider {...methods}>\n            <form\n              className={css.forma}\n              onSubmit={handleSubmit(onSubmit)}\n              autoComplete=\"off\"\n            >\n              <div className={css.formGroup}>\n                <label htmlFor=\"name\" className={css.formLabel}></label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className={css.formInput}\n                  placeholder=\"Name\"\n                  {...methods.register('name')}\n                />\n                {methods.formState.errors.name && (\n                  <span className={css.error}>\n                    {methods.formState.errors.name.message}\n                  </span>\n                )}\n              </div>\n              <div className={css.formGroup}>\n                <label htmlFor=\"email\" className={css.formLabel}></label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  className={css.formInput}\n                  placeholder=\"Email\"\n                  {...methods.register('email')}\n                />\n                {methods.formState.errors.email && (\n                  <span className={css.error}>\n                    {methods.formState.errors.email.message}\n                  </span>\n                )}\n              </div>\n              <div className={css.formGroup}>\n                <label htmlFor=\"password\" className={css.formLabel}></label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={css.formInput}\n                  placeholder=\"Password\"\n                  {...methods.register('password')}\n                />\n                {methods.formState.errors.password && (\n                  <span className={css.error}>\n                    {methods.formState.errors.password.message}\n                  </span>\n                )}\n              </div>\n              <button type=\"submit\" className={css.btn}>\n                Send\n              </button>\n            </form>\n          </FormProvider>\n        </div>\n      </div>\n      <Toaster />\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Header.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useOutsideClick } from 'hooks/useOutsideClick';\nimport UserEditModal from '../ModalWindow/UserEditModal/UserEditModal';\nimport { useTheme } from '../ThemeContext/ThemeContext';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from '../../redux/auth/authSelectors';\nimport { userCurrent, updateUser } from '../../redux/auth/authOperations';\nimport { selectCurrentTheme, setTheme } from '../../redux/themeSlice';\n\nexport const Header = ({ onVisible }) => {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isShowTheme, setIsShowTheme] = useState(false);\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const currentTheme = useSelector(selectCurrentTheme);\n  const { changeTheme } = useTheme();\n\n  useOutsideClick(ref, () => setIsShowTheme(false));\n\n  useEffect(() => {\n    if (isLoggedIn && !isRefreshing) {\n      dispatch(userCurrent());\n    }\n  }, [dispatch, isLoggedIn, isRefreshing]);\n\n  useEffect(() => {\n    changeTheme(currentTheme);\n  }, [currentTheme, changeTheme]);\n\n  const toggleOpenTheme = () => setIsShowTheme(!isShowTheme);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const onSelectTheme = value => {\n    dispatch(setTheme(value));\n    const formData = new FormData();\n    formData.append('theme', value);\n    dispatch(updateUser({ formData }));\n    setIsShowTheme(false);\n  };\n\n  const onOpenSidebar = () => {\n    onVisible(true);\n  };\n\n  return (\n    <div className={css.headerBox}>\n      <button className={css.burgerMenu} onClick={onOpenSidebar}>\n        <svg className={css.menu}>\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.rightBlock}>\n        <div className={css.dropdown} ref={ref}>\n          <button className={css.dropbtn} onClick={toggleOpenTheme}>\n            Theme\n            <div className={`${css.arrowIcon} ${isShowTheme ? css.open : ''}`}>\n              <svg className={css.arrow}>\n                <use href={`${sprite}#icon-chevron-down`} />\n              </svg>\n            </div>\n          </button>\n          <div\n            className={`${css.dropdownContent} ${isShowTheme ? css.show : ''}`}\n          >\n            <button\n              className={css.themeBtn}\n              onClick={() => onSelectTheme('light')}\n            >\n              Light\n            </button>\n            <button\n              className={css.themeBtn}\n              onClick={() => onSelectTheme('dark')}\n            >\n              Dark\n            </button>\n            <button\n              className={css.themeBtn}\n              onClick={() => onSelectTheme('violet')}\n            >\n              Violet\n            </button>\n          </div>\n        </div>\n        <div className={css.imgBtn}>\n          <p className={css.text}>{user ? user.name : 'Loading...'}</p>\n          <div className={css.avatarWrap} onClick={handleModalOpen}>\n            {user?.avatarURL ? (\n              <img src={user.avatarURL} alt=\"avatar\" className={css.avatar} />\n            ) : (\n              <svg className={css.avatar}>\n                <use href={`${sprite}#icon-user`} />\n              </svg>\n            )}\n          </div>\n        </div>\n      </div>\n      {isModalOpen && <UserEditModal onClose={handleModalClose} />}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOutsideClick = (ref, callback) => {\n  useEffect(() => {\n    const handleClick = event => {\n      if (\n        ref.current &&\n        event.target instanceof Element &&\n        !ref.current.contains(event.target)\n      ) {\n        callback();\n      }\n    };\n\n    document.body.addEventListener('click', handleClick);\n\n    return () => document.body.removeEventListener('click', handleClick);\n  }, [ref, callback]);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarWrap\":\"Sidebar_sidebarWrap__OM0pe\",\"visible\":\"Sidebar_visible__pTmtS\",\"sidebar\":\"Sidebar_sidebar__zfhso\",\"logoBox\":\"Sidebar_logoBox__klDMT\",\"logoTitle\":\"Sidebar_logoTitle__y3Xo0\",\"logoSvg\":\"Sidebar_logoSvg__oxddu\",\"createTitle\":\"Sidebar_createTitle__vgsMb\",\"createBox\":\"Sidebar_createBox__TVC3O\",\"createText\":\"Sidebar_createText__ZOou-\",\"createBtn\":\"Sidebar_createBtn__teKQ2\",\"createSvg\":\"Sidebar_createSvg__1T9ou\",\"projects\":\"Sidebar_projects__jFnNb\",\"helpBlock\":\"Sidebar_helpBlock__8EJaK\",\"img\":\"Sidebar_img__XLI+Z\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpLink\":\"Sidebar_helpLink__-GoPD\",\"helpSvg\":\"Sidebar_helpSvg__ApcJ+\",\"helpBtn\":\"Sidebar_helpBtn__4Jcxs\",\"logOutBtn\":\"Sidebar_logOutBtn__ejD4x\",\"logOutSvg\":\"Sidebar_logOutSvg__cquQX\",\"block\":\"Sidebar_block__Wekjj\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"BoardCard_card__jFWO1\",\"cardActive\":\"BoardCard_cardActive__RPfXx\",\"cardSvg\":\"BoardCard_cardSvg__6ieyy\",\"btnSvg\":\"BoardCard_btnSvg__BAZWg\",\"title\":\"BoardCard_title__ywkDH\",\"btnBlock\":\"BoardCard_btnBlock__co+J2\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BoardModal_input__sZ9wO\",\"listIcons\":\"BoardModal_listIcons__K-CF9\",\"icon\":\"BoardModal_icon__pcHWC\",\"inputIcon\":\"BoardModal_inputIcon__vuXyY\",\"labeIcon\":\"BoardModal_labeIcon__tKSSA\",\"text\":\"BoardModal_text__ktZ6W\",\"listBackground\":\"BoardModal_listBackground__TioSZ\",\"backgroundBox\":\"BoardModal_backgroundBox__mAkdl\",\"emptyPicture\":\"BoardModal_emptyPicture__wzYJZ\",\"iconImg\":\"BoardModal_iconImg__LIIzs\",\"errors\":\"BoardModal_errors__4C3Nt\",\"error\":\"BoardModal_error__bJQBJ\"};","import React from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport css from './BoardModal.module.css';\nimport path1 from '../../../images/modal_background/modalBgIcon(1).jpg';\nimport path2 from '../../../images/modal_background/modalBgIcon (2) .jpg';\nimport path3 from '../../../images/modal_background/modalBgIcon(3).jpg';\nimport path4 from '../../../images/modal_background/modalBgIcon(4).jpg';\nimport path5 from '../../../images/modal_background/modalBgIcon (5) .jpg';\nimport path6 from '../../../images/modal_background/modalBgIcon(6) .jpg';\nimport path7 from '../../../images/modal_background/modalBgIcon(7) .jpg';\nimport path8 from '../../../images/modal_background/modalBgIcon(8) .jpg';\nimport path9 from '../../../images/modal_background/modalBgIcon(9) .jpg';\nimport path10 from '../../../images/modal_background/modalBgIcon(10) .jpg';\nimport path11 from '../../../images/modal_background/modalBgIcon(11) .jpg';\nimport path12 from '../../../images/modal_background/modalBgIcon(12) .jpg';\nimport path13 from '../../../images/modal_background/modalBgIcon (13).jpg';\nimport path14 from '../../../images/modal_background/modalBgIcon (14).jpg';\nimport path15 from '../../../images/modal_background/modalBgIcon(15).jpg';\n\nimport { ModalContainerReact } from '../../Shared/ModalContainerReact/ModalContainerReact';\nimport { ModalInput } from '../../Shared/ModalInput/ModalInput';\n\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '../../Shared/Button/Button';\nimport { addBoard, editBoard } from '../../../redux/boards/boardsOperations.js';\nimport { useNavigate } from 'react-router';\n\nconst icons = [\n  'icon-project',\n  'icon-star-04',\n  'icon-loading-03',\n  'icon-puzzle-piece-02',\n  'icon-container',\n  'icon-lightning-02',\n  'icon-colors',\n  'icon-hexagon-01',\n];\nconst backgrounds = [\n  {\n    name: '1',\n    path: path1,\n  },\n  {\n    name: '2',\n    path: path2,\n  },\n  {\n    name: '3',\n    path: path3,\n  },\n  {\n    name: '4',\n    path: path4,\n  },\n  {\n    name: '5',\n    path: path5,\n  },\n  {\n    name: '6',\n    path: path6,\n  },\n  {\n    name: '7',\n    path: path7,\n  },\n  {\n    name: '8',\n    path: path8,\n  },\n  {\n    name: '9',\n    path: path9,\n  },\n  {\n    name: '10',\n    path: path10,\n  },\n  {\n    name: '11',\n    path: path11,\n  },\n  {\n    name: '12',\n    path: path12,\n  },\n  {\n    name: '13',\n    path: path13,\n  },\n  {\n    name: '14',\n    path: path14,\n  },\n  {\n    name: '15',\n    path: path15,\n  },\n];\n\nexport const BoardModal = ({ onClose, type, board }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isCreate = type === 'create';\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      title: isCreate ? '' : board.title,\n      icon: isCreate ? 'icon-project' : board.icon,\n      background: isCreate ? '' : board.background,\n    },\n  });\n  const onSuccessCreate = id => {\n    navigate(id);\n  };\n\n  const onSubmit = data => {\n    const payload = {\n      title: data.title,\n      icon: data.icon,\n      background: data.background,\n      callBack: onSuccessCreate,\n    };\n\n    if (isCreate) {\n      dispatch(addBoard(payload));\n    } else {\n      payload.id = board._id;\n      dispatch(editBoard(payload));\n    }\n    onClose();\n  };\n\n  return (\n    <ModalContainerReact\n      onClose={onClose}\n      modalTitle={isCreate ? 'New Board' : 'Edit Board'}\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <ModalInput\n          placeholder=\"Title\"\n          name=\"title\"\n          errors={errors}\n          autoFocus={true}\n          register={register}\n          id=\"title\"\n        />\n        \n        {/* <input\n          className={`${css.input} ${errors.title && css.error}`}\n          {...register('title', {\n            required: 'Title required',\n          })}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          id=\"title\"\n        />\n        {errors.title && <p className={css.errors}>{errors.title.message}</p>} */}\n\n        <p className={css.text}>Icons</p>\n        <ul className={css.listIcons}>\n          {icons.map(item => (\n            <li key={item}>\n              <input\n                className={css.inputIcon}\n                {...register('icon', { required: true })}\n                type=\"radio\"\n                value={item}\n                id={item}\n              />\n              <label htmlFor={item} className={css.labeIcon}>\n                <svg className={css.icon}>\n                  <use href={`${sprite}#${item}`} />\n                </svg>\n              </label>\n            </li>\n          ))}\n        </ul>\n        <p className={css.text}>Background</p>\n        <ul className={css.listBackground}>\n          <li>\n            <input\n              className={css.inputIcon}\n              {...register('background')}\n              type=\"radio\"\n              value=\"\"\n              id=\"empty\"\n            />\n            <label htmlFor=\"empty\" className={css.labeIcon}>\n              <div className={css.backgroundBox}>\n                <svg className={css.emptyPicture}>\n                  <use href={`${sprite}#icon-block-background`} />\n                </svg>\n              </div>\n            </label>\n          </li>\n          {backgrounds.map(item => (\n            <li key={item.name}>\n              <input\n                className={css.inputIcon}\n                {...register('background')}\n                type=\"radio\"\n                value={item.name}\n                id={item.name}\n                onClick={() => setValue('background', item.name)}\n              />\n              <label htmlFor={item.name} className={css.labeIcon}>\n                <img src={item.path} alt=\"#\" className={css.iconImg} />\n              </label>\n            </li>\n          ))}\n        </ul>\n        <Button icon=\"plus\">{isCreate ? 'Create' : 'Edit'}</Button>\n      </form>\n    </ModalContainerReact>\n  );\n};\n","import React, { useState } from 'react';\nimport css from './BoardCard.module.css';\nimport sprite from '../../images/sprite.svg';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\n\nexport const BoardCard = ({ board, closeSidebar }) => {\n  const navigate = useNavigate();\n  const { boardId } = useParams();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSelectBoard = () => navigate(board._id);\n\n  const handleModalClose = () => setModalOpen(false);\n\n  const onSuccessDelete = () => {\n    if (boardId === board._id) {\n      navigate('/home', { replace: true });\n    }\n  };\n\n  const onEditBoard = e => {\n    e.stopPropagation();\n    setModalOpen(true);\n    closeSidebar();\n  };\n\n  const onDelete = e => {\n    e.stopPropagation();\n    const params = {\n      id: board._id,\n      callback: onSuccessDelete,\n    };\n    dispatch(deleteBoard(params));\n  };\n\n  return (\n    <>\n      <li>\n        <div\n          onClick={onSelectBoard}\n          className={clsx(css.card, {\n            [css.cardActive]: boardId === board._id,\n          })}\n          to={board._id}\n        >\n          <svg className={css.cardSvg}>\n            <use href={`${sprite}#${board.icon}`} />\n          </svg>\n          <p className={css.title}>{board.title}</p>\n          <div className={css.btnBlock}>\n            <button className={css.btn} onClick={onEditBoard}>\n              <svg className={css.btnSvg}>\n                <use href={`${sprite}#icon-pencil`} />\n              </svg>\n            </button>\n            <button className={css.btn} onClick={onDelete}>\n              <svg className={css.btnSvg}>\n                <use href={`${sprite}#icon-trash`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </li>\n      {isModalOpen && (\n        <BoardModal onClose={handleModalClose} type=\"edit\" board={board} />\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"HelpModal_input__napi4\",\"textarea\":\"HelpModal_textarea__IMk8j\"};","import React from 'react';\nimport { ModalContainerReact } from '../../Shared/ModalContainerReact/ModalContainerReact';\nimport { useForm } from 'react-hook-form';\nimport css from './HelpModal.module.css';\nimport clsx from 'clsx';\nimport { Button } from '../../Shared/Button/Button';\nimport axios from 'axios';\n\nexport const HelpModal = ({ onClose }) => {\n  const { register, handleSubmit } = useForm();\n  const onSubmit = async data => {\n    try {\n      const payload = {\n        email: data.email,\n        comment: data.text,\n      };\n      await axios.post('/api/users/help', payload);\n      onClose();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <ModalContainerReact onClose={onClose} modalTitle=\"Need help\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className={css.input}\n          {...register('email')}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email address \"\n          id=\"email\"\n        />\n        <textarea\n          className={clsx(css.input, css.textarea)}\n          {...register('text')}\n          name=\"text\"\n          placeholder=\"Comment\"\n        />\n        <Button>Send</Button>\n      </form>\n    </ModalContainerReact>\n  );\n};\n","import { useState } from 'react';\nimport css from './Sidebar.module.css';\nimport clsx from 'clsx';\nimport sprite from '../../images/sprite.svg';\nimport helpImg2x from '../../images/flower/flower_@2x.png';\nimport helpImg from '../../images/flower/flower.png';\nimport { BoardCard } from '../BoardCard/BoardCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logOut } from '../../redux/auth/authOperations';\n\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\nimport { HelpModal } from 'components/ModalWindow/HelpModal/HelpModal';\nimport { selectBoards } from '../../redux/boards/boardsSlice';\n\nexport const Sidebar = ({ visible, onVisible }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isModalOpenHelp, setModalOpenHelp] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n    onVisible(false);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleModalOpenHelp = () => {\n    setModalOpenHelp(true);\n    onVisible(false);\n  };\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    navigate('/welcome');\n  };\n\n  const handleModalCloseHelp = () => setModalOpenHelp(false);\n\n  const closeSidebar = e => {\n    if (e.target === e.currentTarget) onVisible(false);\n  };\n\n  return (\n    <div\n      className={clsx(css.sidebarWrap, { [css.visible]: visible })}\n      onClick={closeSidebar}\n    >\n      <aside className={css.sidebar}>\n        <div className={css.logoBox}>\n          <svg className={css.logoSvg}>\n            <use href={`${sprite}#icon-logo`} />\n          </svg>\n          <h1 className={css.logoTitle}>Task Pro</h1>\n        </div>\n        <div className={css.block}>\n          <p className={css.createTitle}>My boards</p>\n          <div className={css.createBox}>\n            <p className={css.createText}>Create a new board</p>\n            <button className={css.createBtn} onClick={handleModalOpen}>\n              <svg className={css.createSvg}>\n                <use href={`${sprite}#icon-plus`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n        <ul className={css.projects}>\n          {boards.map(board => (\n            <BoardCard\n              key={board._id}\n              board={board}\n              closeSidebar={() => onVisible(false)}\n            />\n          ))}\n        </ul>\n\n        <div className={css.block}>\n          <div className={css.helpBlock}>\n            <img\n              className={css.img}\n              srcSet={helpImg2x}\n              src={helpImg}\n              alt=\"Flower\"\n            ></img>\n            <p className={css.helpText}>\n              If you need help with <br />\n              <a href=\"http/#\" className={css.helpLink}>\n                TaskPro&nbsp;\n              </a>\n              , check out our support resources or reach out to our customer\n              support team.\n            </p>\n            <button className={css.helpBtn} onClick={handleModalOpenHelp}>\n              <svg className={css.helpSvg}>\n                <use href={`${sprite}#icon-help-circle`} />\n              </svg>\n              Need help?\n            </button>\n          </div>\n          <button className={css.logOutBtn} onClick={handleLogOut}>\n            <svg className={css.logOutSvg}>\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            Log out\n          </button>\n        </div>\n      </aside>\n      {isModalOpen && <BoardModal onClose={handleModalClose} type=\"create\" />}\n      {isModalOpenHelp && <HelpModal onClose={handleModalCloseHelp} />}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"homePage\":\"HomePage_homePage__GDK2b\",\"homePageContent\":\"HomePage_homePageContent__K9Z+9\"};","// extracted by mini-css-extract-plugin\nexport default {\"noProjectContainer\":\"Info_noProjectContainer__6o3cD\",\"noProjectNotify\":\"Info_noProjectNotify__KsRdi\",\"button\":\"Info_button__CPBxV\"};","import React, { useState } from 'react';\nimport css from './Info.module.css';\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\n\nexport const Info = () => {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n  const handleModalClose = () => setModalOpen(false);\n\n  return (\n    <div className={css.noProjectContainer}>\n      <p className={css.noProjectNotify}>\n        Before starting your project, it is essential{' '}\n        <button className={css.button} onClick={handleModalOpen}>\n          to create a board\n        </button>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </p>\n      {isModalOpen && <BoardModal onClose={handleModalClose} type=\"create\" />}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Header } from '../../components/Header/Header';\nimport { Sidebar } from '../../components/Sidebar/Sidebar';\nimport css from './HomePage.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchBoards } from '../../redux/boards/boardsOperations';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Info } from '../../components/Info/Info';\n\nconst HomePage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const [sidebarVisible, setSidebarVisible] = useState(false);\n\n  useEffect(() => {\n    const getAllBoards = () => {\n      dispatch(fetchBoards());\n    };\n    getAllBoards();\n  }, [dispatch]);\n\n  return (\n    <div className={css.homePage}>\n      <Sidebar visible={sidebarVisible} onVisible={setSidebarVisible} />\n      <div className={css.homePageContent}>\n        <Header onVisible={setSidebarVisible} />\n        {boardId ? <Outlet /> : <Info />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["ValidationSchema","Yup","shape","name","min","max","required","email","password","UserEditModal","_ref","onClose","fileInputRef","useRef","dispatch","useDispatch","user","useSelector","selectUser","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","token","selectAccessToken","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setValue","file","setFile","useState","useEffect","userCurrent","_jsxs","_Fragment","children","_jsx","className","css","onClick","concat","ev","stopPropagation","width","height","stroke","href","sprite","src","URL","createObjectURL","alt","avatarURL","type","handleButtonClick","current","click","ref","style","display","onChange","event","selectedFile","target","files","FormProvider","onSubmit","async","formData","FormData","key","userData","hasOwnProperty","append","theme","updateUser","unwrap","toast","position","background","color","error","message","autoComplete","htmlFor","placeholder","register","formState","errors","Toaster","Header","onVisible","isModalOpen","setModalOpen","isShowTheme","setIsShowTheme","currentTheme","selectCurrentTheme","changeTheme","useTheme","useOutsideClick","callback","handleClick","Element","contains","document","body","addEventListener","removeEventListener","onSelectTheme","value","setTheme","onOpenSidebar","toggleOpenTheme","handleModalOpen","handleModalClose","icons","backgrounds","path","BoardModal","board","navigate","useNavigate","isCreate","title","icon","onSuccessCreate","id","ModalContainerReact","modalTitle","data","payload","callBack","addBoard","_id","editBoard","ModalInput","autoFocus","map","item","Button","BoardCard","closeSidebar","boardId","useParams","onSuccessDelete","replace","onSelectBoard","clsx","to","e","params","deleteBoard","HelpModal","comment","text","axios","console","log","Sidebar","visible","boards","selectBoards","isModalOpenHelp","setModalOpenHelp","currentTarget","srcSet","helpImg2x","handleModalOpenHelp","handleLogOut","logOut","handleModalCloseHelp","Info","HomePage","sidebarVisible","setSidebarVisible","fetchBoards","Outlet"],"sourceRoot":""}