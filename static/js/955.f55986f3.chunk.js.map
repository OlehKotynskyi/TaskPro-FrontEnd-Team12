{"version":3,"file":"static/js/955.f55986f3.chunk.js","mappings":"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","sources":["components/Loaders/LoaderButton.jsx","webpack://react-homework-template/./src/components/Header/Header.module.css?4e72","webpack://react-homework-template/./src/components/ModalWindow/UserEditModal/UserEditModal.module.css?326b","components/ModalWindow/UserEditModal/UserEditModal.jsx","components/Header/Header.jsx","hooks/useOutsideClick.js","webpack://react-homework-template/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://react-homework-template/./src/components/BoardCard/BoardCard.module.css?ed49","webpack://react-homework-template/./src/components/ModalWindow/BoardModal/BoardModal.module.css?af20","../node_modules/hyphenate-style-name/index.js","../node_modules/shallow-equal/src/objects.ts","../node_modules/react-responsive/src/mediaQuery.ts","../node_modules/react-responsive/src/toQuery.ts","../node_modules/react-responsive/src/Context.ts","../node_modules/react-responsive/src/useMediaQuery.ts","components/ModalWindow/BoardModal/BoardModal.jsx","components/BoardCard/BoardCard.jsx","webpack://react-homework-template/./src/components/Shared/ModalTextarea/ModalTextarea.module.css?4cef","components/Shared/ModalTextarea/ModalTextarea.jsx","components/ModalWindow/HelpModal/HelpModal.jsx","components/Sidebar/Sidebar.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/Info/Info.module.css?d253","components/Info/Info.jsx","pages/HomePage/HomePage.jsx","../node_modules/css-mediaquery/index.js","../node_modules/matchmediaquery/index.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const LoaderButton = () => {\n  return (\n    <div className={css.containerBtn}>\n      <ThreeDots\n        visible={true}\n        height=\"20\"\n        width=\"20\"\n        color=\"#4fa94d\"\n        radius=\"9\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"headerBox\":\"Header_headerBox__RPcIW\",\"imgBtn\":\"Header_imgBtn__FQJWu\",\"avatarWrap\":\"Header_avatarWrap__W3T7-\",\"avatar\":\"Header_avatar__fR3aq\",\"arrowIcon\":\"Header_arrowIcon__iUFq8\",\"arrow\":\"Header_arrow__UOjtE\",\"open\":\"Header_open__coLd6\",\"text\":\"Header_text__4jGdp\",\"dropdown\":\"Header_dropdown__ZNsCx\",\"dropbtn\":\"Header_dropbtn__iVUxw\",\"dropdownContent\":\"Header_dropdownContent__Rx4Dt\",\"show\":\"Header_show__mvTx2\",\"rightBlock\":\"Header_rightBlock__UU+Ag\",\"themeBtn\":\"Header_themeBtn__BpnEE\",\"active\":\"Header_active__rHuVo\",\"burgerMenu\":\"Header_burgerMenu__NNFS9\",\"menu\":\"Header_menu__bKlxq\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserEditModal_container__fmnEZ\",\"backdrop\":\"UserEditModal_backdrop__VFVNS\",\"cont\":\"UserEditModal_cont__61oRW\",\"wrap\":\"UserEditModal_wrap__YQOVi\",\"closeBtn\":\"UserEditModal_closeBtn__FwgRu\",\"txt\":\"UserEditModal_txt__5B5ud\",\"avatarContainer\":\"UserEditModal_avatarContainer__XQO3d\",\"plusBtn\":\"UserEditModal_plusBtn__Ggtv0\",\"formInput\":\"UserEditModal_formInput__u5gWz\",\"formGroup\":\"UserEditModal_formGroup__BZND2\",\"error\":\"UserEditModal_error__uWT19\",\"forma\":\"UserEditModal_forma__DbTXq\",\"btn\":\"UserEditModal_btn__B3qmh\",\"eye\":\"UserEditModal_eye__vSeKA\",\"avatar\":\"UserEditModal_avatar__4GdiQ\"};","import { useRef, useEffect, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './UserEditModal.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n  selectAccessToken,\n} from '../../../redux/auth/authSelectors';\nimport { userCurrent, updateUser } from '../../../redux/auth/authOperations';\nimport { LoaderButton } from 'components/Loaders/LoaderButton';\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Must be a valid email!').required('Required'),\n  password: Yup.string().min(7, 'Too short').max(256, 'Too long'),\n});\n\nexport default function UserEditModal({ onClose }) {\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const token = useSelector(selectAccessToken);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const methods = useForm({\n    resolver: yupResolver(ValidationSchema),\n    defaultValues: {\n      name: user?.name || '',\n      email: user?.email || '',\n      password: '',\n    },\n  });\n  const { handleSubmit, reset, setValue } = methods;\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    if (isLoggedIn && !isRefreshing) {\n      dispatch(userCurrent());\n    }\n  }, [dispatch, isLoggedIn, isRefreshing]);\n\n  useEffect(() => {\n    if (user) {\n      setValue('name', user.name);\n      setValue('email', user.email);\n      setValue('password', user.password);\n    }\n  }, [user, setValue]);\n\n  const onSubmit = async userData => {\n    setIsLoading(true);\n    const formData = new FormData();\n\n    for (const key in userData) {\n      if (userData.hasOwnProperty(key)) {\n        formData.append(key, userData[key]);\n      }\n    }\n\n    formData.append('theme', user.theme);\n\n    if (file) {\n      formData.append('avatar', file);\n    }\n    try {\n      await dispatch(updateUser({ formData, token })).unwrap();\n      reset();\n      onClose();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMenuClick = ev => {\n    ev.stopPropagation();\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n\n  return (\n    <>\n      <div className={css.backdrop} onClick={() => onClose()}>\n        <div\n          className={`${css.container} ${css.cont}`}\n          onClick={handleMenuClick}\n        >\n          <div className={css.wrap}>\n            <button className={css.closeBtn} onClick={() => onClose()}>\n              <svg width=\"18\" height=\"18\" stroke=\"currentColor\">\n                <use href={`${sprite}#icon-x-close`} />\n              </svg>\n            </button>\n          </div>\n          <p className={css.txt}>Edit Profile</p>\n          <div className={css.avatarContainer}>\n            {file ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"avatar\"\n                className={css.avatar}\n              />\n            ) : user?.avatarURL ? (\n              <img src={user.avatarURL} alt=\"avatar\" className={css.avatar} />\n            ) : (\n              <svg className={css.avatar}>\n                <use href={`${sprite}#icon-user`} />\n              </svg>\n            )}\n            <button\n              type=\"button\"\n              className={css.plusBtn}\n              onClick={handleButtonClick}\n            >\n              <svg width=\"10\" height=\"10\" stroke=\"currentColor\">\n                <use href={`${sprite}#icon-plus`}></use>\n              </svg>\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n              />\n            </button>\n          </div>\n          <FormProvider {...methods}>\n            <form\n              className={css.forma}\n              onSubmit={handleSubmit(onSubmit)}\n              autoComplete=\"off\"\n            >\n              <div className={css.formGroup}>\n                <label htmlFor=\"name\" className={css.formLabel}></label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className={css.formInput}\n                  placeholder=\"Name\"\n                  {...methods.register('name')}\n                />\n                {methods.formState.errors.name && (\n                  <span className={css.error}>\n                    {methods.formState.errors.name.message}\n                  </span>\n                )}\n              </div>\n              <div className={css.formGroup}>\n                <label htmlFor=\"email\" className={css.formLabel}></label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  className={css.formInput}\n                  placeholder=\"Email\"\n                  {...methods.register('email')}\n                />\n                {methods.formState.errors.email && (\n                  <span className={css.error}>\n                    {methods.formState.errors.email.message}\n                  </span>\n                )}\n              </div>\n              <div className={css.formGroup}>\n                <label htmlFor=\"password\" className={css.formLabel}></label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={css.formInput}\n                  placeholder=\"Password\"\n                  {...methods.register('password')}\n                />\n                {methods.formState.errors.password && (\n                  <span className={css.error}>\n                    {methods.formState.errors.password.message}\n                  </span>\n                )}\n              </div>\n              <button type=\"submit\" className={css.btn} disabled={isLoading}>\n                {isLoading ? <LoaderButton /> : 'Send'}\n              </button>\n            </form>\n          </FormProvider>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Header.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useOutsideClick } from 'hooks/useOutsideClick';\nimport UserEditModal from '../ModalWindow/UserEditModal/UserEditModal';\nimport { useTheme } from '../ThemeContext/ThemeContext';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from '../../redux/auth/authSelectors';\nimport { userCurrent, updateUser } from '../../redux/auth/authOperations';\nimport { selectCurrentTheme, setTheme } from '../../redux/themeSlice';\n\nexport const Header = ({ onVisible }) => {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isShowTheme, setIsShowTheme] = useState(false);\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const currentTheme = useSelector(selectCurrentTheme);\n  const { changeTheme } = useTheme();\n\n  useOutsideClick(ref, () => setIsShowTheme(false));\n\n  useEffect(() => {\n    if (isLoggedIn && !isRefreshing) {\n      dispatch(userCurrent());\n    }\n  }, [dispatch, isLoggedIn, isRefreshing]);\n\n  useEffect(() => {\n    changeTheme(currentTheme);\n  }, [currentTheme, changeTheme]);\n\n  const toggleOpenTheme = () => setIsShowTheme(!isShowTheme);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const onSelectTheme = value => {\n    dispatch(setTheme(value));\n    const formData = new FormData();\n    formData.append('theme', value);\n    dispatch(updateUser({ formData }));\n    setIsShowTheme(false);\n  };\n\n  const onOpenSidebar = () => {\n    onVisible(true);\n  };\n\n  return (\n    <div className={css.headerBox}>\n      <button className={css.burgerMenu} onClick={onOpenSidebar}>\n        <svg className={css.menu}>\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.rightBlock}>\n        <div className={css.dropdown} ref={ref}>\n          <button className={css.dropbtn} onClick={toggleOpenTheme}>\n            Theme\n            <div className={`${css.arrowIcon} ${isShowTheme ? css.open : ''}`}>\n              <svg className={css.arrow}>\n                <use href={`${sprite}#icon-chevron-down`} />\n              </svg>\n            </div>\n          </button>\n          <div\n            className={`${css.dropdownContent} ${isShowTheme ? css.show : ''}`}\n          >\n            <button\n              className={`${css.themeBtn} ${currentTheme === 'light' ? css.active : ''}`}\n              onClick={() => onSelectTheme('light')}\n            >\n              Light\n            </button>\n            <button\n              className={`${css.themeBtn} ${currentTheme === 'dark' ? css.active : ''}`}\n              onClick={() => onSelectTheme('dark')}\n            >\n              Dark\n            </button>\n            <button\n              className={`${css.themeBtn} ${currentTheme === 'violet' ? css.active : ''}`}\n              onClick={() => onSelectTheme('violet')}\n            >\n              Violet\n            </button>\n          </div>\n        </div>\n        <div className={css.imgBtn}>\n          <p className={css.text}>{user ? user.name : 'Loading...'}</p>\n          <div className={css.avatarWrap} onClick={handleModalOpen}>\n            {user?.avatarURL ? (\n              <img src={user.avatarURL} alt=\"avatar\" className={css.avatar} />\n            ) : (\n              <svg className={css.avatar}>\n                <use href={`${sprite}#icon-user`} />\n              </svg>\n            )}\n          </div>\n        </div>\n      </div>\n      {isModalOpen && <UserEditModal onClose={handleModalClose} />}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOutsideClick = (ref, callback) => {\n  useEffect(() => {\n    const handleClick = event => {\n      if (\n        ref.current &&\n        event.target instanceof Element &&\n        !ref.current.contains(event.target)\n      ) {\n        callback();\n      }\n    };\n\n    document.body.addEventListener('click', handleClick);\n\n    return () => document.body.removeEventListener('click', handleClick);\n  }, [ref, callback]);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarWrap\":\"Sidebar_sidebarWrap__OM0pe\",\"visible\":\"Sidebar_visible__pTmtS\",\"sidebar\":\"Sidebar_sidebar__zfhso\",\"logoBox\":\"Sidebar_logoBox__klDMT\",\"logoTitle\":\"Sidebar_logoTitle__y3Xo0\",\"logoSvg\":\"Sidebar_logoSvg__oxddu\",\"createTitle\":\"Sidebar_createTitle__vgsMb\",\"createBox\":\"Sidebar_createBox__TVC3O\",\"createText\":\"Sidebar_createText__ZOou-\",\"createBtn\":\"Sidebar_createBtn__teKQ2\",\"createSvg\":\"Sidebar_createSvg__1T9ou\",\"projects\":\"Sidebar_projects__jFnNb\",\"helpBlock\":\"Sidebar_helpBlock__8EJaK\",\"img\":\"Sidebar_img__XLI+Z\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpLink\":\"Sidebar_helpLink__-GoPD\",\"helpSvg\":\"Sidebar_helpSvg__ApcJ+\",\"helpBtn\":\"Sidebar_helpBtn__4Jcxs\",\"logOutBtn\":\"Sidebar_logOutBtn__ejD4x\",\"logOutSvg\":\"Sidebar_logOutSvg__cquQX\",\"block\":\"Sidebar_block__Wekjj\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"BoardCard_card__jFWO1\",\"cardActive\":\"BoardCard_cardActive__RPfXx\",\"cardSvg\":\"BoardCard_cardSvg__6ieyy\",\"btnBlock\":\"BoardCard_btnBlock__co+J2\",\"btnSvg\":\"BoardCard_btnSvg__BAZWg\",\"title\":\"BoardCard_title__ywkDH\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BoardModal_input__sZ9wO\",\"listIcons\":\"BoardModal_listIcons__K-CF9\",\"icon\":\"BoardModal_icon__pcHWC\",\"inputIcon\":\"BoardModal_inputIcon__vuXyY\",\"labeIcon\":\"BoardModal_labeIcon__tKSSA\",\"text\":\"BoardModal_text__ktZ6W\",\"listBackground\":\"BoardModal_listBackground__TioSZ\",\"backgroundBox\":\"BoardModal_backgroundBox__mAkdl\",\"emptyPicture\":\"BoardModal_emptyPicture__wzYJZ\",\"iconImg\":\"BoardModal_iconImg__LIIzs\",\"selected\":\"BoardModal_selected__QHwgq\",\"errors\":\"BoardModal_errors__4C3Nt\",\"error\":\"BoardModal_error__bJQBJ\"};","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","export type validObjectValue = Record<string, any> | null | undefined;\n\nexport default function shallowEqualObjects<T>(\n  objA: validObjectValue,\n  objB: validObjectValue\n): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n\n    if (\n      objA[key] !== objB[key] ||\n      !Object.prototype.hasOwnProperty.call(objB, key)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import PropTypes from 'prop-types'\n\nconst stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\n// media types\nconst types = {\n  all: PropTypes.bool,\n  grid: PropTypes.bool,\n  aural: PropTypes.bool,\n  braille: PropTypes.bool,\n  handheld: PropTypes.bool,\n  print: PropTypes.bool,\n  projection: PropTypes.bool,\n  screen: PropTypes.bool,\n  tty: PropTypes.bool,\n  tv: PropTypes.bool,\n  embossed: PropTypes.bool\n}\n\n// properties that match media queries\nconst matchers = {\n  orientation: PropTypes.oneOf(['portrait', 'landscape']),\n\n  scan: PropTypes.oneOf(['progressive', 'interlace']),\n\n  aspectRatio: PropTypes.string,\n  deviceAspectRatio: PropTypes.string,\n\n  height: stringOrNumber,\n  deviceHeight: stringOrNumber,\n\n  width: stringOrNumber,\n  deviceWidth: stringOrNumber,\n\n  color: PropTypes.bool,\n\n  colorIndex: PropTypes.bool,\n\n  monochrome: PropTypes.bool,\n  resolution: stringOrNumber,\n  type: Object.keys(types)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { type, ...featureMatchers } = matchers\n\n// media features\nconst features = {\n  minAspectRatio: PropTypes.string,\n  maxAspectRatio: PropTypes.string,\n  minDeviceAspectRatio: PropTypes.string,\n  maxDeviceAspectRatio: PropTypes.string,\n\n  minHeight: stringOrNumber,\n  maxHeight: stringOrNumber,\n  minDeviceHeight: stringOrNumber,\n  maxDeviceHeight: stringOrNumber,\n\n  minWidth: stringOrNumber,\n  maxWidth: stringOrNumber,\n  minDeviceWidth: stringOrNumber,\n  maxDeviceWidth: stringOrNumber,\n\n  minColor: PropTypes.number,\n  maxColor: PropTypes.number,\n\n  minColorIndex: PropTypes.number,\n  maxColorIndex: PropTypes.number,\n\n  minMonochrome: PropTypes.number,\n  maxMonochrome: PropTypes.number,\n\n  minResolution: stringOrNumber,\n  maxResolution: stringOrNumber,\n\n  ...featureMatchers\n}\n\nconst all = { ...types, ...features }\n\nexport default {\n  all: all,\n  types: types,\n  matchers: matchers,\n  features: features\n}\n","import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\nimport { MediaQueryAllQueryable } from './types'\n\nconst negate = (cond: string) => `not ${cond}`\n\nconst keyVal = (k: string, v: unknown): string => {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return realKey\n  }\n  if (v === false) {\n    return negate(realKey)\n  }\n  return `(${realKey}: ${v})`\n}\n\nconst join = (conds: string[]): string => conds.join(' and ')\n\nconst toQuery = (obj: Partial<MediaQueryAllQueryable>): string => {\n  const rules: string[] = []\n  Object.keys(mq.all).forEach((k) => {\n    const v = obj[k as keyof MediaQueryAllQueryable]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n\nexport default toQuery\n","import { createContext } from 'react'\nimport { MediaQueryAllQueryable } from './types'\n\nconst Context = createContext<Partial<MediaQueryAllQueryable> | undefined>(\n  undefined\n)\n\nexport default Context\n","import { useRef, useEffect, useContext, useState } from 'react'\nimport matchMedia from 'matchmediaquery'\nimport hyphenate from 'hyphenate-style-name'\nimport { shallowEqualObjects } from 'shallow-equal'\nimport toQuery from './toQuery'\nimport Context from './Context'\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types'\n\ntype MediaQuerySettings = Partial<MediaQueryAllQueryable & { query?: string }>\ntype HyphenateKeyTypes = MediaQueryMatchers | MediaQueryAllQueryable\n\nconst makeQuery = (settings: MediaQuerySettings) =>\n  settings.query || toQuery(settings)\n\nconst hyphenateKeys = (obj?: HyphenateKeyTypes) => {\n  type K = keyof HyphenateKeyTypes\n\n  if (!obj) return undefined\n  const keys = Object.keys(obj) as K[]\n\n  return keys.reduce(\n    (result, key) => {\n      result[hyphenate(key)] = obj[key]\n      return result\n    },\n    {} as Record<string, (typeof obj)[K]>\n  )\n}\n\nconst useIsUpdate = () => {\n  const ref = useRef(false)\n\n  useEffect(() => {\n    ref.current = true\n  }, [])\n\n  return ref.current\n}\n\nconst useDevice = (\n  deviceFromProps?: MediaQueryMatchers\n): Partial<MediaQueryAllQueryable> | undefined => {\n  const deviceFromContext = useContext(Context)\n  const getDevice = () =>\n    hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext)\n  const [device, setDevice] = useState(getDevice)\n\n  useEffect(() => {\n    const newDevice = getDevice()\n    if (!shallowEqualObjects(device, newDevice)) {\n      setDevice(newDevice)\n    }\n  }, [deviceFromProps, deviceFromContext])\n\n  return device\n}\n\nconst useQuery = (settings: MediaQuerySettings) => {\n  const getQuery = () => makeQuery(settings)\n  const [query, setQuery] = useState(getQuery)\n\n  useEffect(() => {\n    const newQuery = getQuery()\n    if (query !== newQuery) {\n      setQuery(newQuery)\n    }\n  }, [settings])\n\n  return query\n}\n\nconst useMatchMedia = (query: string, device?: MediaQueryMatchers) => {\n  const getMatchMedia = () => matchMedia(query, device || {}, !!device)\n  const [mq, setMq] = useState(getMatchMedia)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate) {\n      // skip on mounting, it has already been set\n      const newMq = getMatchMedia()\n      setMq(newMq)\n\n      return () => {\n        if (newMq) {\n          newMq.dispose()\n        }\n      }\n    }\n  }, [query, device])\n\n  return mq\n}\n\nconst useMatches = (mediaQuery: MediaQueryList): boolean => {\n  const [matches, setMatches] = useState<boolean>(mediaQuery.matches)\n\n  useEffect(() => {\n    const updateMatches = (ev: MediaQueryListEvent) => {\n      setMatches(ev.matches)\n    }\n    mediaQuery.addListener(updateMatches)\n    setMatches(mediaQuery.matches)\n\n    return () => {\n      mediaQuery.removeListener(updateMatches)\n    }\n  }, [mediaQuery])\n\n  return matches\n}\n\nconst useMediaQuery = (\n  settings: MediaQuerySettings,\n  device?: MediaQueryMatchers,\n  onChange?: (_: boolean) => void\n) => {\n  const deviceSettings = useDevice(device)\n  const query = useQuery(settings)\n  if (!query) throw new Error('Invalid or missing MediaQuery!')\n  const mq = useMatchMedia(query, deviceSettings)\n  const matches = useMatches(mq as unknown as MediaQueryList)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate && onChange) {\n      onChange(matches)\n    }\n  }, [matches])\n\n  useEffect(\n    () => () => {\n      if (mq) {\n        mq.dispose()\n      }\n    },\n    []\n  )\n\n  return matches\n}\n\nexport default useMediaQuery\n","import React, { useEffect, useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport css from './BoardModal.module.css';\nimport { ModalContainerReact } from '../../Shared/ModalContainerReact/ModalContainerReact';\nimport { ModalInput } from '../../Shared/ModalInput/ModalInput';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '../../Shared/Button/Button';\nimport { addBoard, editBoard } from '../../../redux/boards/boardsOperations.js';\nimport { useNavigate } from 'react-router';\nimport { fetchBackgrounds } from '../../../redux/auth/authOperations';\nimport { useMediaQuery } from 'react-responsive';\n\nconst icons = [\n  'icon-project',\n  'icon-star-04',\n  'icon-loading-03',\n  'icon-puzzle-piece-02',\n  'icon-container',\n  'icon-lightning-02',\n  'icon-colors',\n  'icon-hexagon-01',\n];\n\nexport const BoardModal = ({ onClose, type, board }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [backgrounds, setBackgrounds] = useState({});\n  const [selectedBackground, setSelectedBackground] = useState(null);\n  const [error, setError] = useState(null);\n  const isCreate = type === 'create';\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      title: isCreate ? '' : board.title,\n      icon: isCreate ? 'icon-project' : board.icon,\n      background: isCreate ? '' : board.background,\n    },\n  });\n\n  const onSuccessCreate = id => {\n    navigate(id);\n  };\n\n  const onSubmit = data => {\n    const payload = {\n      title: data.title,\n      icon: data.icon,\n      background: selectedBackground,\n      callBack: onSuccessCreate,\n    };\n\n    if (isCreate) {\n      dispatch(addBoard(payload));\n    } else {\n      payload.id = board._id;\n      dispatch(editBoard(payload));\n    }\n    onClose();\n  };\n\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px) and (max-width: 1024px)',\n  });\n  const isDesktop = useMediaQuery({ query: '(min-width: 1025px)' });\n  const isRetina = window.devicePixelRatio > 1;\n\n  useEffect(() => {\n    const fetchBackgroundsData = async () => {\n      try {\n        const backgroundsData = await fetchBackgrounds();\n        setBackgrounds(backgroundsData);\n      } catch (error) {\n        console.error('Error fetching backgrounds:', error);\n        setError('Failed to load backgrounds');\n      }\n    };\n\n    fetchBackgroundsData();\n  }, []);\n\n  const handleBackgroundClick = bgUrl => {\n    setSelectedBackground(bgUrl);\n    setValue('background', bgUrl);\n  };\n\n  const getFilteredBackgrounds = () => {\n    if (isMobile) {\n      return isRetina\n        ? backgrounds.mobile?.retina\n        : backgrounds.mobile?.regular;\n    }\n    if (isTablet) {\n      return isRetina\n        ? backgrounds.tablet?.retina\n        : backgrounds.tablet?.regular;\n    }\n    if (isDesktop) {\n      return isRetina\n        ? backgrounds.desktop?.retina\n        : backgrounds.desktop?.regular;\n    }\n    return [];\n  };\n\n  const renderIcons = () => {\n    return icons.map(item => (\n      <li key={item}>\n        <input\n          className={css.inputIcon}\n          {...register('icon', { required: true })}\n          type=\"radio\"\n          value={item}\n          id={item}\n        />\n        <label htmlFor={item} className={css.labeIcon}>\n          <svg className={css.icon}>\n            <use href={`${sprite}#${item}`} />\n          </svg>\n        </label>\n      </li>\n    ));\n  };\n\n  const renderBackgrounds = () => {\n    const filteredBackgrounds = getFilteredBackgrounds();\n    return Array.isArray(filteredBackgrounds)\n      ? filteredBackgrounds.map((bg, index) => (\n          <li key={index}>\n            <input\n              className={css.inputIcon}\n              {...register('background')}\n              type=\"radio\"\n              value={bg}\n              id={`background-${index}`}\n              onClick={() => handleBackgroundClick(bg)}\n            />\n            <label htmlFor={`background-${index}`} className={css.labeIcon}>\n              <img\n                src={bg}\n                srcSet={`${bg} 1x, ${bg.replace(/(\\.\\w+)$/, '__2x$1')} 2x`}\n                alt=\"#\"\n                className={`${css.iconImg} ${\n                  selectedBackground === bg ? css.selected : ''\n                }`}\n                style={{ width: '28px', height: '28px' }}\n              />\n            </label>\n          </li>\n        ))\n      : null;\n  };\n\n  return (\n    <ModalContainerReact\n      onClose={onClose}\n      modalTitle={isCreate ? 'New Board' : 'Edit Board'}\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <ModalInput\n          placeholder=\"Title\"\n          name=\"title\"\n          errors={errors}\n          autoFocus={true}\n          register={register}\n          id=\"title\"\n        />\n\n        <p className={css.text}>Icons</p>\n        <ul className={css.listIcons}>{renderIcons()}</ul>\n\n        <p className={css.text}>Background</p>\n        {error && <p className={css.errorText}>{error}</p>}\n        <ul className={css.listBackground}>\n          <li>\n            <input\n              className={css.inputIcon}\n              {...register('background')}\n              type=\"radio\"\n              value=\"\"\n              id=\"empty\"\n            />\n            <label htmlFor=\"empty\" className={css.labeIcon}>\n              <div className={css.backgroundBox}>\n                <svg className={css.emptyPicture}>\n                  <use href={`${sprite}#icon-block-background`} />\n                </svg>\n              </div>\n            </label>\n          </li>\n          {renderBackgrounds()}\n        </ul>\n        <Button icon=\"plus\">{isCreate ? 'Create' : 'Edit'}</Button>\n      </form>\n    </ModalContainerReact>\n  );\n};\n","import React, { useState } from 'react';\nimport css from './BoardCard.module.css';\nimport sprite from '../../images/sprite.svg';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\n\nexport const BoardCard = ({ board, closeSidebar }) => {\n  const navigate = useNavigate();\n  const { boardId } = useParams();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSelectBoard = () => navigate(board._id);\n\n  const handleModalClose = () => setModalOpen(false);\n\n  const onSuccessDelete = () => {\n    if (boardId === board._id) {\n      navigate('/home', { replace: true });\n    }\n  };\n\n  const onEditBoard = e => {\n    e.stopPropagation();\n    setModalOpen(true);\n    closeSidebar();\n  };\n\n  const onDelete = e => {\n    e.stopPropagation();\n    const params = {\n      id: board._id,\n      callback: onSuccessDelete,\n    };\n    dispatch(deleteBoard(params));\n  };\n\n  return (\n    <>\n      <li>\n        <div\n          onClick={onSelectBoard}\n          className={clsx(css.card, {\n            [css.cardActive]: boardId === board._id,\n          })}\n          to={board._id}\n        >\n          <svg className={css.cardSvg}>\n            <use href={`${sprite}#${board.icon}`} />\n          </svg>\n          <p className={css.title}>{board.title}</p>\n          <div className={css.btnBlock}>\n            <button className={css.btn} onClick={onEditBoard}>\n              <svg className={css.btnSvg}>\n                <use href={`${sprite}#icon-pencil`} />\n              </svg>\n            </button>\n            <button className={css.btn} onClick={onDelete}>\n              <svg className={css.btnSvg}>\n                <use href={`${sprite}#icon-trash`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </li>\n      {isModalOpen && (\n        <BoardModal onClose={handleModalClose} type=\"edit\" board={board} />\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"ModalTextarea_inputContainer__rlJeX\",\"input\":\"ModalTextarea_input__5KXKk\",\"error\":\"ModalTextarea_error__z3nSI\",\"errorMessage\":\"ModalTextarea_errorMessage__9QB0W\"};","import React from 'react';\nimport styles from './ModalTextarea.module.css';\n\nexport const ModalTextarea = ({\n  className,\n  errorClassName,\n  register,\n  errors,\n  name,\n  errorMessage,\n  ...rest\n}) => {\n  const error = errors && errors[name];\n  const inputProps = register ? register(name, {\n    required: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`,\n    minLength: {\n      value: 10,\n      message: `${name.charAt(0).toUpperCase() + name.slice(1)} must be at least 10 characters long`\n    },\n    maxLength: {\n      value: 100,\n      message: `${name.charAt(0).toUpperCase() + name.slice(1)} must be less than 100 characters`\n    }\n  }) : {};\n  \n  return (\n    <div className={styles.inputContainer}>\n      <textarea\n        className={`${styles.input} ${className} ${error ? styles.error : ''} `}\n        {...inputProps}\n        {...rest}\n      />\n      {error && (<div className={styles.errorMessage}>{errorMessage || error.message}</div>)}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\n// import css from './HelpModal.module.css';\n\nimport axios from 'axios';\n\nimport { Button } from '../../Shared/Button/Button';\nimport { ModalInput } from '../../Shared/ModalInput/ModalInput';\nimport { ModalTextarea } from '../../Shared/ModalTextarea/ModalTextarea';\nimport { ModalContainerReact } from '../../Shared/ModalContainerReact/ModalContainerReact';\n\nexport const HelpModal = ({ onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n\n  const onSubmit = async data => {\n    try {\n      const payload = {\n        email: data.email,\n        comment: data.comment,  \n      };\n      const response = await axios.post('/api/users/help', payload, {\n        headers: {\n          'Content-Type': 'application/json'  \n        }\n      });\n      console.log('Response:', response.data); \n      onClose(); \n    } catch (error) {\n      console.error(\"Error submitting form:\", error.response ? error.response.data : error.message);\n      onClose(); \n    }\n  };\n\n  return (\n    <ModalContainerReact onClose={onClose} modalTitle=\"Need help\">\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <ModalInput\n          name=\"email\"\n          placeholder=\"Email address\"\n          type=\"email\"\n          errors={errors}\n          register={register}\n          id=\"email\"\n        />\n        <ModalTextarea \n          name=\"comment\"\n          placeholder=\"Comment\"\n          errors={errors}\n          register={register}\n          id=\"comment\"\n        />\n        <Button>Send</Button>\n      </form>\n    </ModalContainerReact>\n  );\n};\n","import React, { useState } from 'react';\nimport css from './Sidebar.module.css';\nimport clsx from 'clsx';\nimport sprite from '../../images/sprite.svg';\nimport helpImg2x from '../../images/flower/flower_@2x.png';\nimport helpImg from '../../images/flower/flower.png';\nimport { BoardCard } from '../BoardCard/BoardCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logOut } from '../../redux/auth/authOperations';\n\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\nimport { HelpModal } from 'components/ModalWindow/HelpModal/HelpModal';\nimport { selectBoards } from '../../redux/boards/boardsSlice';\n\nexport const Sidebar = ({ visible, onVisible }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isModalOpenHelp, setModalOpenHelp] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n    onVisible(false);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleModalOpenHelp = () => {\n    setModalOpenHelp(true);\n    onVisible(false);\n  };\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    navigate('/welcome');\n  };\n\n  const handleModalCloseHelp = () => setModalOpenHelp(false);\n\n  const closeSidebar = e => {\n    if (e.target === e.currentTarget) onVisible(false);\n  };\n\n  return (\n    <div\n      className={clsx(css.sidebarWrap, { [css.visible]: visible })}\n      onClick={closeSidebar}\n    >\n      <aside className={css.sidebar}>\n        <div className={css.logoBox}>\n          <svg className={css.logoSvg}>\n            <use href={`${sprite}#icon-logo`} />\n          </svg>\n          <h1 className={css.logoTitle}>Task Pro</h1>\n        </div>\n        <div className={css.block}>\n          <p className={css.createTitle}>My boards</p>\n          <div className={css.createBox}>\n            <p className={css.createText}>Create a new board</p>\n            <button className={css.createBtn} onClick={handleModalOpen}>\n              <svg className={css.createSvg}>\n                <use href={`${sprite}#icon-plus`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n        <ul className={css.projects}>\n          {boards.map(board => (\n            <BoardCard\n              key={board._id}\n              board={board}\n              closeSidebar={() => onVisible(false)}\n            />\n          ))}\n        </ul>\n\n        <div className={css.block}>\n          <div className={css.helpBlock}>\n            <img\n              className={css.img}\n              srcSet={helpImg2x}\n              src={helpImg}\n              alt=\"Flower\"\n            ></img>\n            <p className={css.helpText}>\n              If you need help with <br />\n              <a href=\"http/#\" className={css.helpLink}>\n                TaskPro&nbsp;\n              </a>\n              , check out our support resources or reach out to our customer\n              support team.\n            </p>\n            <button className={css.helpBtn} onClick={handleModalOpenHelp}>\n              <svg className={css.helpSvg}>\n                <use href={`${sprite}#icon-help-circle`} />\n              </svg>\n              Need help?\n            </button>\n          </div>\n          <button className={css.logOutBtn} onClick={handleLogOut}>\n            <svg className={css.logOutSvg}>\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            Log out\n          </button>\n        </div>\n      </aside>\n      {isModalOpen && <BoardModal onClose={handleModalClose} type=\"create\" />}\n      {isModalOpenHelp && <HelpModal onClose={handleModalCloseHelp} />}\n    </div>\n  );\n};\n\n\n// '../../../redux/auth/authOperations';","// extracted by mini-css-extract-plugin\nexport default {\"homePage\":\"HomePage_homePage__GDK2b\",\"homePageContent\":\"HomePage_homePageContent__K9Z+9\"};","// extracted by mini-css-extract-plugin\nexport default {\"noProjectContainer\":\"Info_noProjectContainer__6o3cD\",\"noProjectNotify\":\"Info_noProjectNotify__KsRdi\",\"button\":\"Info_button__CPBxV\"};","import React, { useState } from 'react';\nimport css from './Info.module.css';\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\n\nexport const Info = () => {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n  const handleModalClose = () => setModalOpen(false);\n\n  return (\n    <div className={css.noProjectContainer}>\n      <p className={css.noProjectNotify}>\n        Before starting your project, it is essential{' '}\n        <button className={css.button} onClick={handleModalOpen}>\n          to create a board\n        </button>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </p>\n      {isModalOpen && <BoardModal onClose={handleModalClose} type=\"create\" />}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Header } from '../../components/Header/Header';\nimport { Sidebar } from '../../components/Sidebar/Sidebar';\nimport css from './HomePage.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchBoards } from '../../redux/boards/boardsOperations';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Info } from '../../components/Info/Info';\n\nconst HomePage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const [sidebarVisible, setSidebarVisible] = useState(false);\n\n  useEffect(() => {\n    const getAllBoards = () => {\n      dispatch(fetchBoards());\n    };\n    getAllBoards();\n  }, [dispatch]);\n\n  return (\n    <div className={css.homePage}>\n      <Sidebar visible={sidebarVisible} onVisible={setSidebarVisible} />\n      <div className={css.homePageContent}>\n        <Header onVisible={setSidebarVisible} />\n        {boardId ? <Outlet /> : <Info />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n","'use strict';\n\nvar staticMatch = require('css-mediaquery').match;\nvar dynamicMatch = typeof window !== 'undefined' ? window.matchMedia : null;\n\n// our fake MediaQueryList\nfunction Mql(query, values, forceStatic){\n  var self = this;\n  var mql;\n\n  // matchMedia will return null in FF when it's called in a hidden iframe\n  // ref: https://stackoverflow.com/a/12330568\n  if(dynamicMatch && !forceStatic) mql = dynamicMatch.call(window, query);\n\n  if (mql) {\n    this.matches = mql.matches;\n    this.media = mql.media;\n    // TODO: is there a time it makes sense to remove this listener?\n    mql.addListener(update);\n  } else {\n    this.matches = staticMatch(query, values);\n    this.media = query;\n  }\n\n  this.addListener = addListener;\n  this.removeListener = removeListener;\n  this.dispose = dispose;\n\n  function addListener(listener){\n    if(mql){\n      mql.addListener(listener);\n    }\n  }\n\n  function removeListener(listener){\n    if(mql){\n      mql.removeListener(listener);\n    }\n  }\n\n  // update ourselves!\n  function update(evt){\n    self.matches = evt.matches;\n    self.media = evt.media;\n  }\n\n  function dispose(){\n    if(mql){\n      mql.removeListener(update);\n    }\n  }\n}\n\nfunction matchMedia(query, values, forceStatic){\n  return new Mql(query, values, forceStatic);\n}\n\nmodule.exports = matchMedia;\n"],"names":["LoaderButton","_jsx","className","css","children","ThreeDots","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","ValidationSchema","Yup","shape","name","min","max","required","email","password","UserEditModal","_ref","onClose","fileInputRef","useRef","dispatch","useDispatch","user","useSelector","selectUser","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","token","selectAccessToken","isLoading","setIsLoading","useState","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setValue","file","setFile","useEffect","userCurrent","_Fragment","onClick","_jsxs","concat","ev","stopPropagation","stroke","href","sprite","src","URL","createObjectURL","alt","avatarURL","type","handleButtonClick","current","click","ref","style","display","onChange","event","selectedFile","target","files","FormProvider","onSubmit","async","formData","FormData","key","userData","hasOwnProperty","append","theme","updateUser","unwrap","error","console","autoComplete","htmlFor","placeholder","register","formState","errors","message","disabled","Header","onVisible","isModalOpen","setModalOpen","isShowTheme","setIsShowTheme","currentTheme","selectCurrentTheme","changeTheme","useTheme","useOutsideClick","callback","handleClick","Element","contains","document","body","addEventListener","removeEventListener","onSelectTheme","value","setTheme","onOpenSidebar","toggleOpenTheme","handleModalOpen","handleModalClose","uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hName","replace","test","shallowEqualObjects","objA","objB","aKeys","Object","keys","bKeys","len","length","i","prototype","call","stringOrNumber","PropTypes","types","all","grid","aural","braille","handheld","print","projection","screen","tty","tv","embossed","matchers","orientation","scan","aspectRatio","deviceAspectRatio","deviceHeight","deviceWidth","colorIndex","monochrome","resolution","featureMatchers","features","minAspectRatio","maxAspectRatio","minDeviceAspectRatio","maxDeviceAspectRatio","minHeight","maxHeight","minDeviceHeight","maxDeviceHeight","minWidth","maxWidth","minDeviceWidth","maxDeviceWidth","minColor","maxColor","minColorIndex","maxColorIndex","minMonochrome","maxMonochrome","minResolution","maxResolution","toQuery","obj","rules","mq","forEach","k","v","push","keyVal","realKey","hyphenate","join","Context","createContext","undefined","hyphenateKeys","reduce","result","useIsUpdate","useQuery","settings","getQuery","query","makeQuery","setQuery","newQuery","useMediaQuery","device","deviceSettings","deviceFromProps","deviceFromContext","useContext","getDevice","setDevice","newDevice","useDevice","Error","useMatchMedia","getMatchMedia","matchMedia","setMq","isUpdate","newMq","dispose","matches","mediaQuery","setMatches","updateMatches","addListener","removeListener","useMatches","icons","BoardModal","board","navigate","useNavigate","backgrounds","setBackgrounds","selectedBackground","setSelectedBackground","setError","isCreate","title","icon","background","onSuccessCreate","id","isMobile","isTablet","isDesktop","isRetina","window","devicePixelRatio","backgroundsData","fetchBackgrounds","fetchBackgroundsData","ModalContainerReact","modalTitle","data","payload","callBack","addBoard","_id","editBoard","ModalInput","autoFocus","map","item","renderBackgrounds","filteredBackgrounds","getFilteredBackgrounds","_backgrounds$mobile","_backgrounds$mobile2","_backgrounds$tablet","_backgrounds$tablet2","_backgrounds$desktop","_backgrounds$desktop2","mobile","retina","regular","tablet","desktop","Array","isArray","bg","index","handleBackgroundClick","bgUrl","srcSet","Button","BoardCard","closeSidebar","boardId","useParams","onSuccessDelete","onSelectBoard","clsx","to","e","params","deleteBoard","ModalTextarea","errorClassName","errorMessage","rest","inputProps","charAt","toUpperCase","slice","minLength","maxLength","styles","HelpModal","comment","response","axios","headers","log","noValidate","Sidebar","boards","selectBoards","isModalOpenHelp","setModalOpenHelp","currentTarget","helpImg2x","handleModalOpenHelp","handleLogOut","logOut","handleModalCloseHelp","Info","HomePage","sidebarVisible","setSidebarVisible","fetchBoards","Outlet","exports","values","parseQuery","some","inverse","typeMatch","expressionsMatch","expressions","every","expression","feature","modifier","expValue","toPx","toDpi","toDecimal","parseInt","RE_MEDIA_QUERY","RE_MQ_EXPRESSION","RE_MQ_FEATURE","RE_LENGTH_UNIT","RE_RESOLUTION_UNIT","split","captures","trim","parsed","ratio","numbers","decimal","Number","parseFloat","String","staticMatch","require","dynamicMatch","Mql","forceStatic","mql","self","this","update","evt","media","listener","module"],"sourceRoot":""}