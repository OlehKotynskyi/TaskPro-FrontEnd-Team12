{"version":3,"file":"static/js/698.3b68aacc.chunk.js","mappings":"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","sources":["components/Loaders/LoaderButton.jsx","webpack://react-homework-template/./src/components/Header/Header.module.css?4e72","webpack://react-homework-template/./src/components/ModalWindow/UserEditModal/UserEditModal.module.css?326b","components/ModalWindow/UserEditModal/UserEditModal.jsx","components/Header/Header.jsx","hooks/useOutsideClick.js","webpack://react-homework-template/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://react-homework-template/./src/components/BoardCard/BoardCard.module.css?ed49","webpack://react-homework-template/./src/components/ModalWindow/BoardModal/BoardModal.module.css?af20","components/ModalWindow/BoardModal/BoardModal.jsx","components/BoardCard/BoardCard.jsx","webpack://react-homework-template/./src/components/Shared/ModalTextarea/ModalTextarea.module.css?4cef","components/Shared/ModalTextarea/ModalTextarea.jsx","components/ModalWindow/HelpModal/HelpModal.jsx","components/Sidebar/Sidebar.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/Info/Info.module.css?d253","components/Info/Info.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const LoaderButton = () => {\n  return (\n    <div className={css.containerBtn}>\n      <ThreeDots\n        visible={true}\n        height=\"20\"\n        width=\"20\"\n        color=\"#4fa94d\"\n        radius=\"9\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"headerBox\":\"Header_headerBox__RPcIW\",\"imgBtn\":\"Header_imgBtn__FQJWu\",\"avatarWrap\":\"Header_avatarWrap__W3T7-\",\"avatar\":\"Header_avatar__fR3aq\",\"arrowIcon\":\"Header_arrowIcon__iUFq8\",\"arrow\":\"Header_arrow__UOjtE\",\"open\":\"Header_open__coLd6\",\"text\":\"Header_text__4jGdp\",\"dropdown\":\"Header_dropdown__ZNsCx\",\"dropbtn\":\"Header_dropbtn__iVUxw\",\"dropdownContent\":\"Header_dropdownContent__Rx4Dt\",\"show\":\"Header_show__mvTx2\",\"rightBlock\":\"Header_rightBlock__UU+Ag\",\"themeBtn\":\"Header_themeBtn__BpnEE\",\"active\":\"Header_active__rHuVo\",\"burgerMenu\":\"Header_burgerMenu__NNFS9\",\"menu\":\"Header_menu__bKlxq\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserEditModal_container__fmnEZ\",\"backdrop\":\"UserEditModal_backdrop__VFVNS\",\"cont\":\"UserEditModal_cont__61oRW\",\"wrap\":\"UserEditModal_wrap__YQOVi\",\"closeBtn\":\"UserEditModal_closeBtn__FwgRu\",\"txt\":\"UserEditModal_txt__5B5ud\",\"avatarContainer\":\"UserEditModal_avatarContainer__XQO3d\",\"plusBtn\":\"UserEditModal_plusBtn__Ggtv0\",\"formInput\":\"UserEditModal_formInput__u5gWz\",\"formGroup\":\"UserEditModal_formGroup__BZND2\",\"error\":\"UserEditModal_error__uWT19\",\"forma\":\"UserEditModal_forma__DbTXq\",\"btn\":\"UserEditModal_btn__B3qmh\",\"eye\":\"UserEditModal_eye__vSeKA\",\"avatar\":\"UserEditModal_avatar__4GdiQ\"};","import { useRef, useEffect, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './UserEditModal.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n  selectAccessToken,\n} from '../../../redux/auth/authSelectors';\nimport { userCurrent, updateUser } from '../../../redux/auth/authOperations';\nimport { LoaderButton } from 'components/Loaders/LoaderButton';\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Must be a valid email!').required('Required'),\n  password: Yup.string().min(7, 'Too short').max(256, 'Too long'),\n});\n\nexport default function UserEditModal({ onClose }) {\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const token = useSelector(selectAccessToken);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const methods = useForm({\n    resolver: yupResolver(ValidationSchema),\n    defaultValues: {\n      name: user?.name || '',\n      email: user?.email || '',\n      password: '',\n    },\n  });\n  const { handleSubmit, reset, setValue } = methods;\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    if (isLoggedIn && !isRefreshing) {\n      dispatch(userCurrent());\n    }\n  }, [dispatch, isLoggedIn, isRefreshing]);\n\n  useEffect(() => {\n    if (user) {\n      setValue('name', user.name);\n      setValue('email', user.email);\n      setValue('password', user.password);\n    }\n  }, [user, setValue]);\n\n  const onSubmit = async userData => {\n    setIsLoading(true);\n    const formData = new FormData();\n\n    for (const key in userData) {\n      if (userData.hasOwnProperty(key)) {\n        formData.append(key, userData[key]);\n      }\n    }\n\n    formData.append('theme', user.theme);\n\n    if (file) {\n      formData.append('avatar', file);\n    }\n    try {\n      await dispatch(updateUser({ formData, token })).unwrap();\n      reset();\n      onClose();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMenuClick = ev => {\n    ev.stopPropagation();\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n\n  return (\n    <>\n      <div className={css.backdrop} onClick={() => onClose()}>\n        <div\n          className={`${css.container} ${css.cont}`}\n          onClick={handleMenuClick}\n        >\n          <div className={css.wrap}>\n            <button className={css.closeBtn} onClick={() => onClose()}>\n              <svg width=\"18\" height=\"18\" stroke=\"currentColor\">\n                <use href={`${sprite}#icon-x-close`} />\n              </svg>\n            </button>\n          </div>\n          <p className={css.txt}>Edit Profile</p>\n          <div className={css.avatarContainer}>\n            {file ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"avatar\"\n                className={css.avatar}\n              />\n            ) : user?.avatarURL ? (\n              <img src={user.avatarURL} alt=\"avatar\" className={css.avatar} />\n            ) : (\n              <svg className={css.avatar}>\n                <use href={`${sprite}#icon-user`} />\n              </svg>\n            )}\n            <button\n              type=\"button\"\n              className={css.plusBtn}\n              onClick={handleButtonClick}\n            >\n              <svg width=\"10\" height=\"10\" stroke=\"currentColor\">\n                <use href={`${sprite}#icon-plus`}></use>\n              </svg>\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n              />\n            </button>\n          </div>\n          <FormProvider {...methods}>\n            <form\n              className={css.forma}\n              onSubmit={handleSubmit(onSubmit)}\n              autoComplete=\"off\"\n            >\n              <div className={css.formGroup}>\n                <label htmlFor=\"name\" className={css.formLabel}></label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className={css.formInput}\n                  placeholder=\"Name\"\n                  {...methods.register('name')}\n                />\n                {methods.formState.errors.name && (\n                  <span className={css.error}>\n                    {methods.formState.errors.name.message}\n                  </span>\n                )}\n              </div>\n              <div className={css.formGroup}>\n                <label htmlFor=\"email\" className={css.formLabel}></label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  className={css.formInput}\n                  placeholder=\"Email\"\n                  {...methods.register('email')}\n                />\n                {methods.formState.errors.email && (\n                  <span className={css.error}>\n                    {methods.formState.errors.email.message}\n                  </span>\n                )}\n              </div>\n              <div className={css.formGroup}>\n                <label htmlFor=\"password\" className={css.formLabel}></label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={css.formInput}\n                  placeholder=\"Password\"\n                  {...methods.register('password')}\n                />\n                {methods.formState.errors.password && (\n                  <span className={css.error}>\n                    {methods.formState.errors.password.message}\n                  </span>\n                )}\n              </div>\n              <button type=\"submit\" className={css.btn} disabled={isLoading}>\n                {isLoading ? <LoaderButton /> : 'Send'}\n              </button>\n            </form>\n          </FormProvider>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Header.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useOutsideClick } from 'hooks/useOutsideClick';\nimport UserEditModal from '../ModalWindow/UserEditModal/UserEditModal';\nimport { useTheme } from '../ThemeContext/ThemeContext';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from '../../redux/auth/authSelectors';\nimport { userCurrent, updateUser } from '../../redux/auth/authOperations';\nimport { selectCurrentTheme, setTheme } from '../../redux/themeSlice';\n\nexport const Header = ({ onVisible }) => {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isShowTheme, setIsShowTheme] = useState(false);\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const currentTheme = useSelector(selectCurrentTheme);\n  const { changeTheme } = useTheme();\n\n  useOutsideClick(ref, () => setIsShowTheme(false));\n\n  useEffect(() => {\n    if (isLoggedIn && !isRefreshing) {\n      dispatch(userCurrent());\n    }\n  }, [dispatch, isLoggedIn, isRefreshing]);\n\n  useEffect(() => {\n    changeTheme(currentTheme);\n  }, [currentTheme, changeTheme]);\n\n  const toggleOpenTheme = () => setIsShowTheme(!isShowTheme);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const onSelectTheme = value => {\n    dispatch(setTheme(value));\n    const formData = new FormData();\n    formData.append('theme', value);\n    dispatch(updateUser({ formData }));\n    setIsShowTheme(false);\n  };\n\n  const onOpenSidebar = () => {\n    onVisible(true);\n  };\n\n  return (\n    <div className={css.headerBox}>\n      <button className={css.burgerMenu} onClick={onOpenSidebar}>\n        <svg className={css.menu}>\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.rightBlock}>\n        <div className={css.dropdown} ref={ref}>\n          <button className={css.dropbtn} onClick={toggleOpenTheme}>\n            Theme\n            <div className={`${css.arrowIcon} ${isShowTheme ? css.open : ''}`}>\n              <svg className={css.arrow}>\n                <use href={`${sprite}#icon-chevron-down`} />\n              </svg>\n            </div>\n          </button>\n          <div\n            className={`${css.dropdownContent} ${isShowTheme ? css.show : ''}`}\n          >\n            <button\n              className={`${css.themeBtn} ${currentTheme === 'light' ? css.active : ''}`}\n              onClick={() => onSelectTheme('light')}\n            >\n              Light\n            </button>\n            <button\n              className={`${css.themeBtn} ${currentTheme === 'dark' ? css.active : ''}`}\n              onClick={() => onSelectTheme('dark')}\n            >\n              Dark\n            </button>\n            <button\n              className={`${css.themeBtn} ${currentTheme === 'violet' ? css.active : ''}`}\n              onClick={() => onSelectTheme('violet')}\n            >\n              Violet\n            </button>\n          </div>\n        </div>\n        <div className={css.imgBtn}>\n          <p className={css.text}>{user ? user.name : 'Loading...'}</p>\n          <div className={css.avatarWrap} onClick={handleModalOpen}>\n            {user?.avatarURL ? (\n              <img src={user.avatarURL} alt=\"avatar\" className={css.avatar} />\n            ) : (\n              <svg className={css.avatar}>\n                <use href={`${sprite}#icon-user`} />\n              </svg>\n            )}\n          </div>\n        </div>\n      </div>\n      {isModalOpen && <UserEditModal onClose={handleModalClose} />}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOutsideClick = (ref, callback) => {\n  useEffect(() => {\n    const handleClick = event => {\n      if (\n        ref.current &&\n        event.target instanceof Element &&\n        !ref.current.contains(event.target)\n      ) {\n        callback();\n      }\n    };\n\n    document.body.addEventListener('click', handleClick);\n\n    return () => document.body.removeEventListener('click', handleClick);\n  }, [ref, callback]);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarWrap\":\"Sidebar_sidebarWrap__OM0pe\",\"visible\":\"Sidebar_visible__pTmtS\",\"sidebar\":\"Sidebar_sidebar__zfhso\",\"logoBox\":\"Sidebar_logoBox__klDMT\",\"logoTitle\":\"Sidebar_logoTitle__y3Xo0\",\"logoSvg\":\"Sidebar_logoSvg__oxddu\",\"createTitle\":\"Sidebar_createTitle__vgsMb\",\"createBox\":\"Sidebar_createBox__TVC3O\",\"createText\":\"Sidebar_createText__ZOou-\",\"createBtn\":\"Sidebar_createBtn__teKQ2\",\"createSvg\":\"Sidebar_createSvg__1T9ou\",\"projects\":\"Sidebar_projects__jFnNb\",\"helpBlock\":\"Sidebar_helpBlock__8EJaK\",\"img\":\"Sidebar_img__XLI+Z\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpLink\":\"Sidebar_helpLink__-GoPD\",\"helpSvg\":\"Sidebar_helpSvg__ApcJ+\",\"helpBtn\":\"Sidebar_helpBtn__4Jcxs\",\"logOutBtn\":\"Sidebar_logOutBtn__ejD4x\",\"logOutSvg\":\"Sidebar_logOutSvg__cquQX\",\"block\":\"Sidebar_block__Wekjj\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"BoardCard_card__jFWO1\",\"cardActive\":\"BoardCard_cardActive__RPfXx\",\"cardSvg\":\"BoardCard_cardSvg__6ieyy\",\"btnBlock\":\"BoardCard_btnBlock__co+J2\",\"btnSvg\":\"BoardCard_btnSvg__BAZWg\",\"title\":\"BoardCard_title__ywkDH\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BoardModal_input__sZ9wO\",\"listIcons\":\"BoardModal_listIcons__K-CF9\",\"icon\":\"BoardModal_icon__pcHWC\",\"inputIcon\":\"BoardModal_inputIcon__vuXyY\",\"labeIcon\":\"BoardModal_labeIcon__tKSSA\",\"text\":\"BoardModal_text__ktZ6W\",\"listBackground\":\"BoardModal_listBackground__TioSZ\",\"backgroundBox\":\"BoardModal_backgroundBox__mAkdl\",\"emptyPicture\":\"BoardModal_emptyPicture__wzYJZ\",\"iconImg\":\"BoardModal_iconImg__LIIzs\",\"errors\":\"BoardModal_errors__4C3Nt\",\"error\":\"BoardModal_error__bJQBJ\"};","import React from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport css from './BoardModal.module.css';\nimport path1 from '../../../images/modal_background/modalBgIcon(1).jpg';\nimport path2 from '../../../images/modal_background/modalBgIcon (2) .jpg';\nimport path3 from '../../../images/modal_background/modalBgIcon(3).jpg';\nimport path4 from '../../../images/modal_background/modalBgIcon(4).jpg';\nimport path5 from '../../../images/modal_background/modalBgIcon (5) .jpg';\nimport path6 from '../../../images/modal_background/modalBgIcon(6) .jpg';\nimport path7 from '../../../images/modal_background/modalBgIcon(7) .jpg';\nimport path8 from '../../../images/modal_background/modalBgIcon(8) .jpg';\nimport path9 from '../../../images/modal_background/modalBgIcon(9) .jpg';\nimport path10 from '../../../images/modal_background/modalBgIcon(10) .jpg';\nimport path11 from '../../../images/modal_background/modalBgIcon(11) .jpg';\nimport path12 from '../../../images/modal_background/modalBgIcon(12) .jpg';\nimport path13 from '../../../images/modal_background/modalBgIcon (13).jpg';\nimport path14 from '../../../images/modal_background/modalBgIcon (14).jpg';\nimport path15 from '../../../images/modal_background/modalBgIcon(15).jpg';\n\nimport { ModalContainerReact } from '../../Shared/ModalContainerReact/ModalContainerReact';\nimport { ModalInput } from '../../Shared/ModalInput/ModalInput';\n\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '../../Shared/Button/Button';\nimport { addBoard, editBoard } from '../../../redux/boards/boardsOperations.js';\nimport { useNavigate } from 'react-router';\n\nconst icons = [\n  'icon-project',\n  'icon-star-04',\n  'icon-loading-03',\n  'icon-puzzle-piece-02',\n  'icon-container',\n  'icon-lightning-02',\n  'icon-colors',\n  'icon-hexagon-01',\n];\nconst backgrounds = [\n  {\n    name: '1',\n    path: path1,\n  },\n  {\n    name: '2',\n    path: path2,\n  },\n  {\n    name: '3',\n    path: path3,\n  },\n  {\n    name: '4',\n    path: path4,\n  },\n  {\n    name: '5',\n    path: path5,\n  },\n  {\n    name: '6',\n    path: path6,\n  },\n  {\n    name: '7',\n    path: path7,\n  },\n  {\n    name: '8',\n    path: path8,\n  },\n  {\n    name: '9',\n    path: path9,\n  },\n  {\n    name: '10',\n    path: path10,\n  },\n  {\n    name: '11',\n    path: path11,\n  },\n  {\n    name: '12',\n    path: path12,\n  },\n  {\n    name: '13',\n    path: path13,\n  },\n  {\n    name: '14',\n    path: path14,\n  },\n  {\n    name: '15',\n    path: path15,\n  },\n];\n\nexport const BoardModal = ({ onClose, type, board }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isCreate = type === 'create';\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      title: isCreate ? '' : board.title,\n      icon: isCreate ? 'icon-project' : board.icon,\n      background: isCreate ? '' : board.background,\n    },\n  });\n  const onSuccessCreate = id => {\n    navigate(id);\n  };\n\n  const onSubmit = data => {\n    const payload = {\n      title: data.title,\n      icon: data.icon,\n      background: data.background,\n      callBack: onSuccessCreate,\n    };\n\n    if (isCreate) {\n      dispatch(addBoard(payload));\n    } else {\n      payload.id = board._id;\n      dispatch(editBoard(payload));\n    }\n    onClose();\n  };\n\n  return (\n    <ModalContainerReact\n      onClose={onClose}\n      modalTitle={isCreate ? 'New Board' : 'Edit Board'}\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <ModalInput\n          placeholder=\"Title\"\n          name=\"title\"\n          errors={errors}\n          autoFocus={true}\n          register={register}\n          id=\"title\"\n        />\n        \n        {/* <input\n          className={`${css.input} ${errors.title && css.error}`}\n          {...register('title', {\n            required: 'Title required',\n          })}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          id=\"title\"\n        />\n        {errors.title && <p className={css.errors}>{errors.title.message}</p>} */}\n\n        <p className={css.text}>Icons</p>\n        <ul className={css.listIcons}>\n          {icons.map(item => (\n            <li key={item}>\n              <input\n                className={css.inputIcon}\n                {...register('icon', { required: true })}\n                type=\"radio\"\n                value={item}\n                id={item}\n              />\n              <label htmlFor={item} className={css.labeIcon}>\n                <svg className={css.icon}>\n                  <use href={`${sprite}#${item}`} />\n                </svg>\n              </label>\n            </li>\n          ))}\n        </ul>\n        <p className={css.text}>Background</p>\n        <ul className={css.listBackground}>\n          <li>\n            <input\n              className={css.inputIcon}\n              {...register('background')}\n              type=\"radio\"\n              value=\"\"\n              id=\"empty\"\n            />\n            <label htmlFor=\"empty\" className={css.labeIcon}>\n              <div className={css.backgroundBox}>\n                <svg className={css.emptyPicture}>\n                  <use href={`${sprite}#icon-block-background`} />\n                </svg>\n              </div>\n            </label>\n          </li>\n          {backgrounds.map(item => (\n            <li key={item.name}>\n              <input\n                className={css.inputIcon}\n                {...register('background')}\n                type=\"radio\"\n                value={item.name}\n                id={item.name}\n                onClick={() => setValue('background', item.name)}\n              />\n              <label htmlFor={item.name} className={css.labeIcon}>\n                <img src={item.path} alt=\"#\" className={css.iconImg} />\n              </label>\n            </li>\n          ))}\n        </ul>\n        <Button icon=\"plus\">{isCreate ? 'Create' : 'Edit'}</Button>\n      </form>\n    </ModalContainerReact>\n  );\n};\n","import React, { useState } from 'react';\nimport css from './BoardCard.module.css';\nimport sprite from '../../images/sprite.svg';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\n\nexport const BoardCard = ({ board, closeSidebar }) => {\n  const navigate = useNavigate();\n  const { boardId } = useParams();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSelectBoard = () => navigate(board._id);\n\n  const handleModalClose = () => setModalOpen(false);\n\n  const onSuccessDelete = () => {\n    if (boardId === board._id) {\n      navigate('/home', { replace: true });\n    }\n  };\n\n  const onEditBoard = e => {\n    e.stopPropagation();\n    setModalOpen(true);\n    closeSidebar();\n  };\n\n  const onDelete = e => {\n    e.stopPropagation();\n    const params = {\n      id: board._id,\n      callback: onSuccessDelete,\n    };\n    dispatch(deleteBoard(params));\n  };\n\n  return (\n    <>\n      <li>\n        <div\n          onClick={onSelectBoard}\n          className={clsx(css.card, {\n            [css.cardActive]: boardId === board._id,\n          })}\n          to={board._id}\n        >\n          <svg className={css.cardSvg}>\n            <use href={`${sprite}#${board.icon}`} />\n          </svg>\n          <p className={css.title}>{board.title}</p>\n          <div className={css.btnBlock}>\n            <button className={css.btn} onClick={onEditBoard}>\n              <svg className={css.btnSvg}>\n                <use href={`${sprite}#icon-pencil`} />\n              </svg>\n            </button>\n            <button className={css.btn} onClick={onDelete}>\n              <svg className={css.btnSvg}>\n                <use href={`${sprite}#icon-trash`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </li>\n      {isModalOpen && (\n        <BoardModal onClose={handleModalClose} type=\"edit\" board={board} />\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"ModalTextarea_inputContainer__rlJeX\",\"input\":\"ModalTextarea_input__5KXKk\",\"error\":\"ModalTextarea_error__z3nSI\",\"errorMessage\":\"ModalTextarea_errorMessage__9QB0W\"};","import React from 'react';\nimport styles from './ModalTextarea.module.css';\n\nexport const ModalTextarea = ({\n  className,\n  errorClassName,\n  register,\n  errors,\n  name,\n  errorMessage,\n  ...rest\n}) => {\n  const error = errors && errors[name];\n  const inputProps = register ? register(name, {\n    required: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`,\n  }) : {};\n  \n  return (\n    <div className={styles.inputContainer}>\n      <textarea\n        className={`${styles.input} ${className} ${error ? styles.error : ''} `}\n        {...inputProps}\n        {...rest}\n      />\n      {error && (<div className={styles.errorMessage}>{errorMessage || error.message}</div>)}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\n// import css from './HelpModal.module.css';\n\nimport axios from 'axios';\n\nimport { Button } from '../../Shared/Button/Button';\nimport { ModalInput } from '../../Shared/ModalInput/ModalInput';\nimport { ModalTextarea } from '../../Shared/ModalTextarea/ModalTextarea';\nimport { ModalContainerReact } from '../../Shared/ModalContainerReact/ModalContainerReact';\n\nexport const HelpModal = ({ onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async data => {\n    try {\n      const payload = {\n        email: data.email,\n        text: data.comment,\n      };\n      await axios.post('/api/users/help', payload);\n      onClose();\n    } catch (error) {\n      console.log(error);\n      onClose();\n    }\n  };\n\n  return (\n    <ModalContainerReact onClose={onClose} modalTitle=\"Need help\">\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <ModalInput\n          name=\"email\"\n          placeholder=\"Email address\"\n          type=\"email\"\n          errors={errors}\n          register={register}\n          id=\"email\"\n        />\n        <ModalTextarea \n          name=\"comment\"\n          placeholder=\"Comment\"\n          errors={errors}\n          register={register}\n          id=\"comment\"\n        />\n        <Button>Send</Button>\n      </form>\n    </ModalContainerReact>\n  );\n};\n","import { useState } from 'react';\nimport css from './Sidebar.module.css';\nimport clsx from 'clsx';\nimport sprite from '../../images/sprite.svg';\nimport helpImg2x from '../../images/flower/flower_@2x.png';\nimport helpImg from '../../images/flower/flower.png';\nimport { BoardCard } from '../BoardCard/BoardCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logOut } from '../../redux/auth/authOperations';\n\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\nimport { HelpModal } from 'components/ModalWindow/HelpModal/HelpModal';\nimport { selectBoards } from '../../redux/boards/boardsSlice';\n\nexport const Sidebar = ({ visible, onVisible }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isModalOpenHelp, setModalOpenHelp] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n    onVisible(false);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleModalOpenHelp = () => {\n    setModalOpenHelp(true);\n    onVisible(false);\n  };\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    navigate('/welcome');\n  };\n\n  const handleModalCloseHelp = () => setModalOpenHelp(false);\n\n  const closeSidebar = e => {\n    if (e.target === e.currentTarget) onVisible(false);\n  };\n\n  return (\n    <div\n      className={clsx(css.sidebarWrap, { [css.visible]: visible })}\n      onClick={closeSidebar}\n    >\n      <aside className={css.sidebar}>\n        <div className={css.logoBox}>\n          <svg className={css.logoSvg}>\n            <use href={`${sprite}#icon-logo`} />\n          </svg>\n          <h1 className={css.logoTitle}>Task Pro</h1>\n        </div>\n        <div className={css.block}>\n          <p className={css.createTitle}>My boards</p>\n          <div className={css.createBox}>\n            <p className={css.createText}>Create a new board</p>\n            <button className={css.createBtn} onClick={handleModalOpen}>\n              <svg className={css.createSvg}>\n                <use href={`${sprite}#icon-plus`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n        <ul className={css.projects}>\n          {boards.map(board => (\n            <BoardCard\n              key={board._id}\n              board={board}\n              closeSidebar={() => onVisible(false)}\n            />\n          ))}\n        </ul>\n\n        <div className={css.block}>\n          <div className={css.helpBlock}>\n            <img\n              className={css.img}\n              srcSet={helpImg2x}\n              src={helpImg}\n              alt=\"Flower\"\n            ></img>\n            <p className={css.helpText}>\n              If you need help with <br />\n              <a href=\"http/#\" className={css.helpLink}>\n                TaskPro&nbsp;\n              </a>\n              , check out our support resources or reach out to our customer\n              support team.\n            </p>\n            <button className={css.helpBtn} onClick={handleModalOpenHelp}>\n              <svg className={css.helpSvg}>\n                <use href={`${sprite}#icon-help-circle`} />\n              </svg>\n              Need help?\n            </button>\n          </div>\n          <button className={css.logOutBtn} onClick={handleLogOut}>\n            <svg className={css.logOutSvg}>\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            Log out\n          </button>\n        </div>\n      </aside>\n      {isModalOpen && <BoardModal onClose={handleModalClose} type=\"create\" />}\n      {isModalOpenHelp && <HelpModal onClose={handleModalCloseHelp} />}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"homePage\":\"HomePage_homePage__GDK2b\",\"homePageContent\":\"HomePage_homePageContent__K9Z+9\"};","// extracted by mini-css-extract-plugin\nexport default {\"noProjectContainer\":\"Info_noProjectContainer__6o3cD\",\"noProjectNotify\":\"Info_noProjectNotify__KsRdi\",\"button\":\"Info_button__CPBxV\"};","import React, { useState } from 'react';\nimport css from './Info.module.css';\nimport { BoardModal } from '../ModalWindow/BoardModal/BoardModal';\n\nexport const Info = () => {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n  const handleModalClose = () => setModalOpen(false);\n\n  return (\n    <div className={css.noProjectContainer}>\n      <p className={css.noProjectNotify}>\n        Before starting your project, it is essential{' '}\n        <button className={css.button} onClick={handleModalOpen}>\n          to create a board\n        </button>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </p>\n      {isModalOpen && <BoardModal onClose={handleModalClose} type=\"create\" />}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Header } from '../../components/Header/Header';\nimport { Sidebar } from '../../components/Sidebar/Sidebar';\nimport css from './HomePage.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchBoards } from '../../redux/boards/boardsOperations';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Info } from '../../components/Info/Info';\n\nconst HomePage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const [sidebarVisible, setSidebarVisible] = useState(false);\n\n  useEffect(() => {\n    const getAllBoards = () => {\n      dispatch(fetchBoards());\n    };\n    getAllBoards();\n  }, [dispatch]);\n\n  return (\n    <div className={css.homePage}>\n      <Sidebar visible={sidebarVisible} onVisible={setSidebarVisible} />\n      <div className={css.homePageContent}>\n        <Header onVisible={setSidebarVisible} />\n        {boardId ? <Outlet /> : <Info />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["LoaderButton","_jsx","className","css","children","ThreeDots","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","ValidationSchema","Yup","shape","name","min","max","required","email","password","UserEditModal","_ref","onClose","fileInputRef","useRef","dispatch","useDispatch","user","useSelector","selectUser","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","token","selectAccessToken","isLoading","setIsLoading","useState","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setValue","file","setFile","useEffect","userCurrent","_Fragment","onClick","_jsxs","concat","ev","stopPropagation","stroke","href","sprite","src","URL","createObjectURL","alt","avatarURL","type","handleButtonClick","current","click","ref","style","display","onChange","event","selectedFile","target","files","FormProvider","onSubmit","async","formData","FormData","key","userData","hasOwnProperty","append","theme","updateUser","unwrap","error","console","autoComplete","htmlFor","placeholder","register","formState","errors","message","disabled","Header","onVisible","isModalOpen","setModalOpen","isShowTheme","setIsShowTheme","currentTheme","selectCurrentTheme","changeTheme","useTheme","useOutsideClick","callback","handleClick","Element","contains","document","body","addEventListener","removeEventListener","onSelectTheme","value","setTheme","onOpenSidebar","toggleOpenTheme","handleModalOpen","handleModalClose","icons","backgrounds","path","BoardModal","board","navigate","useNavigate","isCreate","title","icon","background","onSuccessCreate","id","ModalContainerReact","modalTitle","data","payload","callBack","addBoard","_id","editBoard","ModalInput","autoFocus","map","item","Button","BoardCard","closeSidebar","boardId","useParams","onSuccessDelete","replace","onSelectBoard","clsx","to","e","params","deleteBoard","ModalTextarea","errorClassName","errorMessage","rest","inputProps","charAt","toUpperCase","slice","styles","HelpModal","text","comment","axios","log","noValidate","Sidebar","boards","selectBoards","isModalOpenHelp","setModalOpenHelp","currentTarget","srcSet","helpImg2x","handleModalOpenHelp","handleLogOut","logOut","handleModalCloseHelp","Info","HomePage","sidebarVisible","setSidebarVisible","fetchBoards","Outlet"],"sourceRoot":""}