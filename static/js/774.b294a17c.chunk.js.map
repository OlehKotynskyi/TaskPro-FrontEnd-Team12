{"version":3,"file":"static/js/774.b294a17c.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const navigate = useNavigate();\n\n  const onSubmit = data => {\n    console.log(data);\n    // Імітуємо API виклик та успішний логін\n    navigate('/home');\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <label>Email</label>\n        <input {...register('email')} />\n        {errors.email && <p>{errors.email.message}</p>}\n      </div>\n      <div>\n        <label>Password</label>\n        <input type=\"password\" {...register('password')} />\n        {errors.password && <p>{errors.password.message}</p>}\n      </div>\n      <button type=\"submit\">Log In Now</button>\n    </form>\n  );\n};\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const navigate = useNavigate();\n\n  const onSubmit = data => {\n    console.log(data);\n    // Імітуємо API виклик та успішну реєстрацію + логін\n    navigate('/home');\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <label>Name</label>\n        <input {...register('name')} />\n        {errors.name && <p>{errors.name.message}</p>}\n      </div>\n      <div>\n        <label>Email</label>\n        <input {...register('email')} />\n        {errors.email && <p>{errors.email.message}</p>}\n      </div>\n      <div>\n        <label>Password</label>\n        <input type=\"password\" {...register('password')} />\n        {errors.password && <p>{errors.password.message}</p>}\n      </div>\n      <button type=\"submit\">Register Now</button>\n    </form>\n  );\n};\n","import { Route, Routes, Link } from 'react-router-dom';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\n\nconst AuthPage = () => (\n  <div>\n    <nav>\n      <Link to=\"/auth/login\">Log In</Link>\n      <Link to=\"/auth/register\">Register</Link>\n    </nav>\n    <Routes>\n      <Route path=\"login\" element={<LoginForm />} />\n      <Route path=\"register\" element={<RegisterForm />} />\n    </Routes>\n  </div>\n);\n\nexport default AuthPage;\n"],"names":["schema","yup","shape","email","required","password","min","LoginForm","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","navigate","useNavigate","_jsxs","onSubmit","data","console","log","children","_jsx","message","type","name","RegisterForm","AuthPage","Link","to","Routes","Route","path","element"],"sourceRoot":""}